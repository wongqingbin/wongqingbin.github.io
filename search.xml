<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>回滚版本号</title>
      <link href="/ckpo6h1vp002efmnignrn91kf/"/>
      <url>/ckpo6h1vp002efmnignrn91kf/</url>
      
        <content type="html"><![CDATA[<p>git回退版本并强制提交至远程仓库</p><a id="more"></a><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 本地回退命令</span></span><br><span class="line">git reset --hard HEAD^         <span class="comment"># 回退到上个版本</span></span><br><span class="line">git reset --hard HEAD~3        <span class="comment"># 回退到前3次提交之前，以此类推，回退到n次提交之前</span></span><br><span class="line">git reset --hard commit_id     <span class="comment"># 退到/进到 指定commit的sha码(git log查看commit)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 强推推送到远程仓库</span></span><br><span class="line">git push origin HEAD --force</span><br></pre></td></tr></table></figure><p><br><br><span class="btn large center"><a href="<https://github.com/wongqingbin/blog/issues>" title="向博主反馈问题"><i class="fas fa-paper-plane"></i>向博主反馈问题</a></span></p>]]></content>
      
      
      <categories>
          
          <category> Git </category>
          
      </categories>
      
      
        <tags>
            
            <tag> git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>pip修改源</title>
      <link href="/ckpo6h1w00037fmni7bzugbuj/"/>
      <url>/ckpo6h1w00037fmni7bzugbuj/</url>
      
        <content type="html"><![CDATA[<p>pip修改国内源 requirements.txt</p><a id="more"></a><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 1. 临时使用源</span></span><br><span class="line">pip install -r requirements.txt -i https://pypi.tuna.tsinghua.edu.cn/simple --trusted-host pypi.tuna.tsinghua.edu.cn</span><br><span class="line"><span class="comment"># 清华维护：https://pypi.tuna.tsinghua.edu.cn/simple</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip freeze &gt; requirements.txt</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"># 2. 可选国内源列表</span><br><span class="line">阿里云</span><br><span class="line">http:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;pypi&#x2F;simple&#x2F;</span><br><span class="line"></span><br><span class="line">中国科技大学</span><br><span class="line">https:&#x2F;&#x2F;pypi.mirrors.ustc.edu.cn&#x2F;simple&#x2F;</span><br><span class="line"></span><br><span class="line">豆瓣(douban)</span><br><span class="line">http:&#x2F;&#x2F;pypi.douban.com&#x2F;simple&#x2F;</span><br><span class="line"></span><br><span class="line">清华大学</span><br><span class="line">https:&#x2F;&#x2F;pypi.tuna.tsinghua.edu.cn&#x2F;simple&#x2F;</span><br><span class="line"></span><br><span class="line">中国科学技术大学</span><br><span class="line">http:&#x2F;&#x2F;pypi.mirrors.ustc.edu.cn&#x2F;simple&#x2F;</span><br></pre></td></tr></table></figure><p><br><br><span class="btn large center"><a href="<https://github.com/wongqingbin/blog/issues>" title="向博主反馈问题"><i class="fas fa-paper-plane"></i>向博主反馈问题</a></span></p>]]></content>
      
      
      <categories>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> pip </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>npm更换国内源</title>
      <link href="/ckpo6h1w7003qfmnia6ab3wk6/"/>
      <url>/ckpo6h1w7003qfmnia6ab3wk6/</url>
      
        <content type="html"><![CDATA[<p>npm更换阿里源</p><a id="more"></a><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看npm的地址源</span></span><br><span class="line">npm config get registry  <span class="comment"># 或 npm info express</span></span><br><span class="line"><span class="comment"># 修改npm的地址源为淘宝源 无需安装cnpm</span></span><br><span class="line">npm config <span class="built_in">set</span> registry https://registry.npm.taobao.org --global</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 安装cnpm,cnpm默认使用淘宝源</span></span><br><span class="line">npm install -g cnpm --registry=http://registry.npm.taobao.org</span><br></pre></td></tr></table></figure><p><br><br><span class="btn large center"><a href="<https://github.com/wongqingbin/blog/issues>" title="向博主反馈问题"><i class="fas fa-paper-plane"></i>向博主反馈问题</a></span></p>]]></content>
      
      
      <categories>
          
          <category> vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> npm </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>mac安装mysql8.0</title>
      <link href="/ckpo6h1w5003kfmni4e9scpqt/"/>
      <url>/ckpo6h1w5003kfmni4e9scpqt/</url>
      
        <content type="html"><![CDATA[<p>Mac安装mysql8.0版本</p><a id="more"></a><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Mac安装MySQL</span></span><br><span class="line">brew install mysql</span><br><span class="line">mysql.server start</span><br><span class="line">mysql_secure_installation</span><br><span class="line">OK</span><br></pre></td></tr></table></figure><h2 id="基本操作"><a href="#基本操作" class="headerlink" title="基本操作"></a>基本操作</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 启动 mysql, 并设置为开机启动</span></span><br><span class="line">brew services start mysql</span><br><span class="line"><span class="comment"># 关闭 mysql</span></span><br><span class="line">brew services stop mysql</span><br><span class="line"><span class="comment"># 重启 mysql</span></span><br><span class="line">brew services restart mysql</span><br></pre></td></tr></table></figure><h2 id="安装过程详情记录"><a href="#安装过程详情记录" class="headerlink" title="安装过程详情记录"></a>安装过程详情记录</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#### mysql_secure_installation #### 步骤详解</span></span><br><span class="line">Securing the MySQL server deployment.</span><br><span class="line"></span><br><span class="line">Connecting to MySQL using a blank password.</span><br><span class="line"></span><br><span class="line">VALIDATE PASSWORD COMPONENT can be used to <span class="built_in">test</span> passwords</span><br><span class="line">and improve security. It checks the strength of password</span><br><span class="line">and allows the users to <span class="built_in">set</span> only those passwords <span class="built_in">which</span> are</span><br><span class="line">secure enough. Would you like to setup VALIDATE PASSWORD component?</span><br><span class="line"></span><br><span class="line">Press y|Y <span class="keyword">for</span> Yes, any other key <span class="keyword">for</span> No: y   //使用密码验证</span><br><span class="line"></span><br><span class="line">There are three levels of password validation policy:   </span><br><span class="line"></span><br><span class="line">LOW    Length &gt;= 8</span><br><span class="line">MEDIUM Length &gt;= 8, numeric, mixed <span class="keyword">case</span>, and special characters</span><br><span class="line">STRONG Length &gt;= 8, numeric, mixed <span class="keyword">case</span>, special characters and dictionary                  file</span><br><span class="line"></span><br><span class="line">Please enter 0 = LOW, 1 = MEDIUM and 2 = STRONG: 0  // 选择密码验证等级</span><br><span class="line">Please <span class="built_in">set</span> the password <span class="keyword">for</span> root here.</span><br><span class="line"></span><br><span class="line">New password:    // 输入新密码</span><br><span class="line"></span><br><span class="line">Re-enter new password: </span><br><span class="line"></span><br><span class="line">Estimated strength of the password: 50 </span><br><span class="line">Do you wish to <span class="built_in">continue</span> with the password provided?(Press y|Y <span class="keyword">for</span> Yes, any other key <span class="keyword">for</span> No) : y  </span><br><span class="line">By default, a MySQL installation has an anonymous user,</span><br><span class="line">allowing anyone to <span class="built_in">log</span> into MySQL without having to have</span><br><span class="line">a user account created <span class="keyword">for</span> them. This is intended only <span class="keyword">for</span></span><br><span class="line">testing, and to make the installation go a bit smoother.</span><br><span class="line">You should remove them before moving into a production</span><br><span class="line">environment.</span><br><span class="line"></span><br><span class="line">Remove anonymous users? (Press y|Y <span class="keyword">for</span> Yes, any other key <span class="keyword">for</span> No) : y   //删除匿名用户</span><br><span class="line">Success.</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Normally, root should only be allowed to connect from</span><br><span class="line"><span class="string">'localhost'</span>. This ensures that someone cannot guess at</span><br><span class="line">the root password from the network.</span><br><span class="line"></span><br><span class="line">Disallow root login remotely? (Press y|Y <span class="keyword">for</span> Yes, any other key <span class="keyword">for</span> No) : n // 是否禁止远程登录</span><br><span class="line"></span><br><span class="line"> ... skipping.</span><br><span class="line">By default, MySQL comes with a database named <span class="string">'test'</span> that</span><br><span class="line">anyone can access. This is also intended only <span class="keyword">for</span> testing,</span><br><span class="line">and should be removed before moving into a production</span><br><span class="line">environment.</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Remove <span class="built_in">test</span> database and access to it? (Press y|Y <span class="keyword">for</span> Yes, any other key <span class="keyword">for</span> No) : y  // 是否删除测试库</span><br><span class="line"> - Dropping <span class="built_in">test</span> database...</span><br><span class="line">Success.</span><br><span class="line"></span><br><span class="line"> - Removing privileges on <span class="built_in">test</span> database...</span><br><span class="line">Success.</span><br><span class="line"></span><br><span class="line">Reloading the privilege tables will ensure that all changes</span><br><span class="line">made so far will take effect immediately.</span><br><span class="line"></span><br><span class="line">Reload privilege tables now? (Press y|Y <span class="keyword">for</span> Yes, any other key <span class="keyword">for</span> No) : y  // 刷新数据库权限</span><br><span class="line">Success.</span><br><span class="line"></span><br><span class="line">All <span class="keyword">done</span>!   // 完成</span><br></pre></td></tr></table></figure><h2 id="修改root密码"><a href="#修改root密码" class="headerlink" title="修改root密码"></a>修改root密码</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># mysql5.7.9 及更高版本修改root密码方式</span></span><br><span class="line"><span class="comment"># 1.开启mysql跳过密码登录</span></span><br><span class="line">mysqld_safe --user=mysql --skip-grant-tables --skip-networking &amp;</span><br><span class="line"><span class="comment"># 2.命令运行后，重新开启命令行窗口进行下面操作</span></span><br><span class="line">mysql -u root -p</span><br><span class="line"><span class="comment"># NOTE：不用输入密码直接点击enter</span></span><br><span class="line"><span class="comment"># 3.切换数据库，使用mysql库</span></span><br><span class="line">use mysql;</span><br><span class="line"><span class="comment"># 4.查询user用户表，查看用户民和密码</span></span><br><span class="line">select host, user, authentication_string, plugin from user; <span class="comment"># 查询表语句</span></span><br><span class="line"><span class="comment"># 5.如果user表中的root用户的authentication_string字段有值，则清空</span></span><br><span class="line">update user <span class="built_in">set</span> authentication_string=<span class="string">''</span> <span class="built_in">where</span> user=<span class="string">'root'</span>;</span><br><span class="line"><span class="comment"># 6.修改root用户的密码 </span></span><br><span class="line">ALTER user <span class="string">'root'</span>@<span class="string">'localhost'</span> IDENTIFIED BY <span class="string">'admin123456'</span>;</span><br><span class="line"><span class="comment">#####################################################################################</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 5.7.9以下版本修改root密码方式，只是修改的语句不一样</span></span><br><span class="line">use mysql;</span><br><span class="line">update user <span class="built_in">set</span> password=PASSWORD(<span class="string">'admin123456'</span>) <span class="built_in">where</span> user=<span class="string">'root'</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment"># mac上brew安装mysql更改数据存储位置</span></span><br><span class="line"><span class="comment"># 1、创建数据存储目录</span></span><br><span class="line">mkdir /data/mysqldb</span><br><span class="line"><span class="comment"># 2、移动或复制数据库文件</span></span><br><span class="line">sudo cp -rp /usr/<span class="built_in">local</span>/var/mysql /data/mysqldb</span><br><span class="line"><span class="comment"># 3、修改配置文件</span></span><br><span class="line">vim /usr/<span class="built_in">local</span>/etc/my.cnf</span><br><span class="line"> <span class="comment">## Default Homebrew MySQL server config</span></span><br><span class="line"> <span class="comment"># [mysqld]</span></span><br><span class="line"><span class="comment">## Only allow connections from localhost</span></span><br><span class="line"><span class="comment"># bind-address = 127.0.0.1</span></span><br><span class="line"><span class="comment">## data file path</span></span><br><span class="line"><span class="comment"># datadir=/data/mysqldb</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 4、查看数据文件存储目录</span></span><br><span class="line">mysqladmin -u root -p variables | grep datadir</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 用Navicat root用户连接时，会报如下错误：</span></span><br><span class="line">Authentication plugin <span class="string">'caching_sha2_password'</span> cannot be loaded: dlopen/usr/<span class="built_in">local</span>/mysql/lib/plugin/caching_sha2_password.so 2: image not found</span><br><span class="line"><span class="comment"># ----------原因：</span></span><br><span class="line"><span class="comment"># mysql 8.0 及以后版本的默认加密方式变了，变成了 caching_sha2_password</span></span><br><span class="line"><span class="comment"># mysql 8.0 之前 版本的默认加密方式是 mysql_native_password</span></span><br><span class="line"><span class="comment"># ----------解决办法</span></span><br><span class="line"><span class="comment"># 修改root用户的加密方式为 mysql_native_password</span></span><br><span class="line">ALTER USER <span class="string">'root'</span>@<span class="string">'localhost'</span> IDENTIFIED WITH mysql_native_password BY <span class="string">'rootPASSWORD'</span>;</span><br><span class="line"><span class="comment"># mysql创建一个新用户，设置密码加密方式为 mysql_native_password，并授予其所有权限</span></span><br><span class="line">CREATE USER <span class="string">'newUser'</span>@<span class="string">'localhost'</span> IDENTIFIED WITH mysql_native_password BY <span class="string">'newPassWord'</span>;</span><br><span class="line">GRANT ALL PRIVILEGES ON *.* TO <span class="string">'newUser'</span>@<span class="string">'localhost'</span>;</span><br><span class="line"><span class="comment"># 上述用户名后面跟的是localhost，目的是只允许连到本地才能进行访问，不能远程访问，如何才能远程访问？</span></span><br><span class="line"><span class="comment"># 用%替换localhost，如下：</span></span><br><span class="line">CREATE USER <span class="string">'newUser'</span>@<span class="string">'%'</span> IDENTIFIED WITH mysql_native_password BY <span class="string">'newPassWord'</span>;</span><br><span class="line">GRANT ALL PRIVILEGES ON *.* TO <span class="string">'newUser'</span>@<span class="string">'%'</span>;</span><br></pre></td></tr></table></figure><p><br><br><span class="btn large center"><a href="<https://github.com/wongqingbin/blog/issues>" title="向博主反馈问题"><i class="fas fa-paper-plane"></i>向博主反馈问题</a></span></p>]]></content>
      
      
      <categories>
          
          <category> sql </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mysql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>元素定位</title>
      <link href="/ckpo6h1vl0022fmni48fu3zkz/"/>
      <url>/ckpo6h1vl0022fmni48fu3zkz/</url>
      
        <content type="html"><![CDATA[<p>appium元素定位</p><a id="more"></a><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br></pre></td><td class="code"><pre><span class="line"># Selenium元素定位</span><br><span class="line">find_element_by_id</span><br><span class="line">find_element_by_name</span><br><span class="line">find_element_by_xpath</span><br><span class="line">find_element_by_link_text</span><br><span class="line">find_element_by_partial_link_text</span><br><span class="line">find_element_by_tag_name</span><br><span class="line">find_element_by_class_name</span><br><span class="line">find_element_by_css_selector</span><br><span class="line"></span><br><span class="line"># appium元素定位</span><br><span class="line"># find_element_by_ios_uiautomation()</span><br><span class="line"># find_element_by_android_uiautomator(&quot;xx&quot;)</span><br><span class="line"></span><br><span class="line">driver.find_element_by_id(&quot;id&quot;)   # id定位</span><br><span class="line">driver.find_element_by_name(&quot;name&quot;)  # name定位</span><br><span class="line">driver.find_element_by_link_text(&quot;text&quot;)  # 链接名定位</span><br><span class="line">driver.find_element_by_partial_link_text(&quot;text&quot;)  # 通过元素部分可见链接文本定位</span><br><span class="line">driver.find_element_by_tag_name(&quot;name&quot;)  # 通过查找html的标签名称定位元素</span><br><span class="line">driver.find_element_by_xpath(&quot;xpath&quot;)  # 路径定位</span><br><span class="line">driver.find_element_by_class_name(&quot;android.widget.LinearLayout&quot;)  # 类名定位</span><br><span class="line">driver.find_element_by_css_selector(&quot;css&quot;) # css选择器定位</span><br><span class="line"></span><br><span class="line"># 1.appium获取content-desc文本值用element.get_attribute(&#39;name&#39;);</span><br><span class="line"># 2.appium获取text属性的文本值用element.text或者element.get_attribute(&#39;text&#39;);</span><br><span class="line"># 3.appium中属性值对应的定位方式：</span><br><span class="line"># text-&gt;find_element_by_name</span><br><span class="line"># resource_id-&gt;find_element_by_id</span><br><span class="line"># class-&gt;find_element_by_class_name</span><br><span class="line"># content-desc-&gt;find_element_by_accessibility_id</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">global driver</span><br><span class="line"># 元素定位</span><br><span class="line">driver.find_element_by_id(&quot;id&quot;)   # id定位</span><br><span class="line">driver.find_element_by_name(&quot;name&quot;)  # name定位</span><br><span class="line">driver.find_element_by_link_text(&quot;text&quot;)  # 链接名定位</span><br><span class="line">driver.find_element_by_partial_link_text(&quot;text&quot;)  # 通过元素部分可见链接文本定位</span><br><span class="line">driver.find_element_by_tag_name(&quot;name&quot;)  # 通过查找html的标签名称定位元素</span><br><span class="line">driver.find_element_by_xpath(&quot;xpath&quot;)  # 路径定位</span><br><span class="line">driver.find_element_by_class_name(&quot;android.widget.LinearLayout&quot;)  # 类名定位</span><br><span class="line">driver.find_element_by_css_selector(&quot;css&quot;) # css选择器定位</span><br><span class="line"></span><br><span class="line"># 元素集合复数定位</span><br><span class="line">driver.find_elements_by_id(&quot;id&quot;)  # id元素集合</span><br><span class="line">driver.find_elements_by_name(&quot;name&quot;) # name元素集合</span><br><span class="line">driver.find_elements_by_link_text(&quot;text&quot;) # 链接名元素集合</span><br><span class="line">driver.find_elements_by_partial_link_text(&quot;text&quot;) # 部分元素可见链接集合</span><br><span class="line">driver.find_elements_by_tag_name(&quot;name&quot;)  # html标签名集合</span><br><span class="line">driver.find_elements_by_xpath(&quot;xpath&quot;)  # 路径定位集合</span><br><span class="line">driver.find_elements_by_class_name(&quot;android.widget.LinearLayout&quot;)  # 类名定位集合</span><br><span class="line">driver.find_elements_by_css_selector(&quot;css&quot;) # css选择器定位集合</span><br><span class="line"></span><br><span class="line"># 输入框输入</span><br><span class="line">driver.element.send_keys(&quot;中英&quot;)</span><br><span class="line"></span><br><span class="line"># 锁定屏幕</span><br><span class="line">driver.lock(5)</span><br><span class="line"></span><br><span class="line"># 把当前应用置于后台</span><br><span class="line">driver.background_app(5)</span><br><span class="line"></span><br><span class="line"># 收起键盘</span><br><span class="line">driver.hide_keyboard()</span><br><span class="line"></span><br><span class="line"># 打开一个应用或者activity，仅安卓端</span><br><span class="line">driver.start_activity(&#39;com.example.android.apis&#39;, &#39;.Foo&#39;)</span><br><span class="line"></span><br><span class="line"># 打开下拉通知栏 仅Android</span><br><span class="line">driver.open_notifications()</span><br><span class="line"></span><br><span class="line"># 拖动元素，将元素origin_el拖到目标元素destination_el</span><br><span class="line">driver.drag_and_drop(self, origin_el, destination_el):</span><br><span class="line"></span><br><span class="line"># 检查app是否已安装</span><br><span class="line">driver.is_app_installed(&#39;com.example.android.apis&#39;)</span><br><span class="line"></span><br><span class="line"># 安装应用到设备</span><br><span class="line">driver.install_app(&#39;path&#x2F;to&#x2F;my.apk&#39;)</span><br><span class="line"></span><br><span class="line"># 删除应用</span><br><span class="line">driver.remove_app(&#39;com.example.android.apis&#39;)</span><br><span class="line"></span><br><span class="line"># 模拟设备摇晃</span><br><span class="line">driver.shake()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># 关闭应用</span><br><span class="line">driver.close_app()</span><br><span class="line"></span><br><span class="line"># 启动 (Launch)</span><br><span class="line"># 根据服务关键字 (desired capabilities) 启动会话 (session) 。请注意这必须在设定 autoLaunch&#x3D;false 关键字时才能生效。</span><br><span class="line"># 这不是用于启动指定的 app&#x2F;activities ————你可以使用 start_activity 做到这个效果————</span><br><span class="line"># 这是用来继续进行使用了 autoLaunch&#x3D;false 关键字时的初始化 (Launch) 流程的。</span><br><span class="line">driver.launch_app()</span><br><span class="line"></span><br><span class="line"># 应用重置，相当于重新卸载安装</span><br><span class="line">driver.reset()</span><br><span class="line"></span><br><span class="line"># 可用上下文 (context) 列出所有的可用上下文</span><br><span class="line"># 翻译备注：context可以理解为 可进入的窗口 。例如，对于原生应用，可用的context和默认context均为NATIVE_APP。</span><br><span class="line"># 详情可查看对混合应用进行自动化测试</span><br><span class="line">driver.contexts</span><br><span class="line"></span><br><span class="line"># 列出当前上下文</span><br><span class="line">driver.current_context</span><br><span class="line"></span><br><span class="line"># 切换到默认的上下文 (context)</span><br><span class="line"># 将上下文切换到默认上下文</span><br><span class="line">driver.switch_to.context(None)</span><br><span class="line"></span><br><span class="line"># 获取应用的字符串</span><br><span class="line">driver.app_strings</span><br><span class="line"></span><br><span class="line"># 按键事件 (Key Event)给设备发送一个按键事件</span><br><span class="line">driver.keyevent(176)</span><br><span class="line"></span><br><span class="line"># 获取当前的activity</span><br><span class="line">driver.current_activity</span><br><span class="line"></span><br><span class="line"># 触摸动作(TouchAction) &#x2F; 多点触摸动作(MultiTouchAction)</span><br><span class="line">action &#x3D; TouchAction(driver)</span><br><span class="line">action.press(element&#x3D;el, x&#x3D;10, y&#x3D;10).release().perform()</span><br><span class="line"></span><br><span class="line"># 滑动(Swipe)模拟用户滑动</span><br><span class="line"># 注意：appium滑动规则是x从左到右变大，y从上到下变大</span><br><span class="line">driver.swipe(start&#x3D;75, starty&#x3D;500, endx&#x3D;75, endy&#x3D;0, duration&#x3D;800)</span><br><span class="line"></span><br><span class="line"># 捏 (Pinch)捏屏幕 (双指往内移动来缩小屏幕)</span><br><span class="line">driver.pinch(element&#x3D;el)</span><br><span class="line"></span><br><span class="line"># 放大 (Zoom)放大屏幕 (双指往外移动来放大屏幕)</span><br><span class="line">driver.zoom(element&#x3D;el)</span><br><span class="line"></span><br><span class="line"># 滑动到某个元素 (Scroll To)</span><br><span class="line">todo: python</span><br><span class="line"></span><br><span class="line"># 从设备中拉出文件 (Pull File)</span><br><span class="line">driver.pull_file(&#39;Library&#x2F;AddressBook&#x2F;AddressBook.sqlitedb&#39;)</span><br><span class="line"></span><br><span class="line"># 推送文件到设备中去</span><br><span class="line">data &#x3D; &quot;some data for the file&quot;</span><br><span class="line">path &#x3D; &quot;&#x2F;data&#x2F;local&#x2F;tmp&#x2F;file.txt&quot;</span><br><span class="line">driver.push_file(path, data.encode(&#39;base64&#39;))</span><br><span class="line"></span><br><span class="line"># 断言</span><br><span class="line">Assert.assertEquals(&quot;I am a div&quot;, div.getText()); &#x2F;&#x2F;跳转到指定页面并在该页面所以用元素id进行交互</span><br><span class="line"></span><br><span class="line"># 检查文本是否符合预期</span><br><span class="line">assertEqual(&#39;I am a div&#39;, div.text)</span><br><span class="line"></span><br><span class="line"># 输入法是否有活动 返回真假</span><br><span class="line">is_ime_active(self):</span><br><span class="line"></span><br><span class="line"># 返回当前安卓设备可用的输入法</span><br><span class="line">driver.available_ime_engines(self):</span><br><span class="line"></span><br><span class="line"># 激活安卓设备中的制定输入法</span><br><span class="line">driver.activate_ime_engine(self, engine):</span><br><span class="line"></span><br><span class="line"># 关闭当前的输入法（android）</span><br><span class="line">driver.deactivate_ime_engine(self):</span><br><span class="line"></span><br><span class="line"># 打开安卓设备上的位置定位设置</span><br><span class="line">driver.toggle_location_services()</span><br><span class="line"></span><br><span class="line"># 设置设备的经纬度</span><br><span class="line">    :Args:</span><br><span class="line">     - latitude纬度 - String or numeric value between -90.0 and 90.00</span><br><span class="line">     - longitude经度 - String or numeric value between -180.0 and 180.0</span><br><span class="line">     - altitude海拔高度- String or numeric value</span><br><span class="line">用法 driver.set_location(纬度，经度，高度)</span><br><span class="line"></span><br><span class="line"># 点击</span><br><span class="line">element.click()</span><br><span class="line"></span><br><span class="line"># 清除元素内容</span><br><span class="line">element.clear()</span><br><span class="line"></span><br><span class="line"># 返回元素的文本内容</span><br><span class="line">element.text()</span><br><span class="line"></span><br><span class="line"># 提交表单</span><br><span class="line">element.submit(self):</span><br><span class="line"></span><br><span class="line"># 元素是否可用</span><br><span class="line">element.is_enabled()</span><br><span class="line"></span><br><span class="line"># 元素是否可选</span><br><span class="line">element.is_slected()</span><br><span class="line"></span><br><span class="line"># 元素是否可见</span><br><span class="line">element.is_displayed()</span><br><span class="line"></span><br><span class="line"># 获取元素的大小（高和宽）</span><br><span class="line">new_size[&quot;height&quot;] &#x3D; size[&quot;height&quot;]</span><br><span class="line">new_size[&quot;width&quot;] &#x3D; size[&quot;width&quot;]</span><br><span class="line">driver.element.size</span><br><span class="line"></span><br><span class="line"># 获取元素左上角的坐标</span><br><span class="line"># 用法 driver.element.location</span><br><span class="line">&#39;&#39;&#39;返回element的x坐标, int类型&#39;&#39;&#39;</span><br><span class="line">driver.element.location.get(&#39;x&#39;)</span><br><span class="line">&#39;&#39;&#39;返回element的y坐标, int类型&#39;&#39;&#39;</span><br><span class="line">driver.element.location.get(&#39;y&#39;)</span><br><span class="line"></span><br><span class="line"># 获取当前元素的截图为Base64编码的字符串</span><br><span class="line">img_b64 &#x3D; element.screenshot_as_base64</span><br><span class="line"></span><br><span class="line"># 执行JS</span><br><span class="line"># 在当前窗口&#x2F;框架（特指 Html 的 iframe ）同步执行 javascript 代码</span><br><span class="line">driver.execute_script(&#39;document.title&#39;)</span><br><span class="line"># 异步执行代码，其他代码在执行</span><br><span class="line">driver.execute_async_script(&#39;document.title&#39;)</span><br><span class="line"></span><br><span class="line"># 获取当前url</span><br><span class="line">driver.current_url</span><br><span class="line"></span><br><span class="line"># 获取页面源</span><br><span class="line">driver.page_source</span><br><span class="line"></span><br><span class="line"># 关闭当前窗口</span><br><span class="line">driver.close()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># 关闭应用</span><br><span class="line">driver.quit()</span><br><span class="line"></span><br><span class="line"># chrome上进行测试</span><br><span class="line">&#123;</span><br><span class="line">&#39;platformName&#39;: &#39;Android&#39;,</span><br><span class="line">&#39;platformVersion&#39;: &#39;4.4&#39;,</span><br><span class="line">&#39;deviceName&#39;: &#39;Android Emulator&#39;,</span><br><span class="line">&#39;browserName&#39;: &#39;Chrome&#39;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"># 真机测试</span><br><span class="line">&#123;</span><br><span class="line">&#39;automationName&#39;: &#39;Selendroid&#39;,</span><br><span class="line">&#39;platformName&#39;: &#39;Android&#39;,</span><br><span class="line">&#39;platformVersion&#39;: &#39;2.3&#39;,</span><br><span class="line">&#39;deviceName&#39;: &#39;Android Emulator&#39;,</span><br><span class="line">&#39;app&#39;: myApp,</span><br><span class="line">&#39;appPackage&#39;: &#39;com.mycompany.package&#39;,</span><br><span class="line">&#39;appActivity&#39;: &#39;.MainActivity&#39;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"># 多点触控</span><br><span class="line">&quot;&quot;&quot;</span><br><span class="line">规范中的可用事件有：</span><br><span class="line">* 短按 (press)</span><br><span class="line">* 释放 (release)</span><br><span class="line">* 移动到 (moveTo)</span><br><span class="line">* 点击 (tap)</span><br><span class="line">* 等待 (wait)</span><br><span class="line">* 长按 (longPress)</span><br><span class="line">* 取消 (cancel)</span><br><span class="line">* 执行 (perform)</span><br><span class="line">&quot;&quot;&quot;</span><br></pre></td></tr></table></figure><p><br><br><span class="btn large center"><a href="<https://github.com/wongqingbin/blog/issues>" title="向博主反馈问题"><i class="fas fa-paper-plane"></i>向博主反馈问题</a></span></p>]]></content>
      
      
      <categories>
          
          <category> appium </category>
          
      </categories>
      
      
        <tags>
            
            <tag> appium </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>编写命令行工具</title>
      <link href="/ckpo6h1vw002xfmni2dkjgf3p/"/>
      <url>/ckpo6h1vw002xfmni2dkjgf3p/</url>
      
        <content type="html"><![CDATA[<p>python使用argparse编写命令行工具</p><a id="more"></a><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="comment"># 初始化命令行 自带 --help 参数 缩写为-h</span></span><br><span class="line">    parser = argparse.ArgumentParser()</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 必填参数positional arguments 位置参数</span></span><br><span class="line">    parser.add_argument(<span class="string">'param1'</span>, help=<span class="string">'注释内容'</span>, type=int)  <span class="comment"># 默认str类型，可变为type=int</span></span><br><span class="line">    parser.add_argument(<span class="string">'param2'</span>, help=<span class="string">'注释内容'</span>, type=str)  <span class="comment"># 默认str类型，可变为type=int</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 可选参数           缩写    全拼</span></span><br><span class="line">    parser.add_argument(<span class="string">"-P"</span>, <span class="string">"--path"</span>, help=<span class="string">"注释"</span>, type=str)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 获取命令行参数 parser.parse_args() 并赋值给args</span></span><br><span class="line">    args = parser.parse_args()</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 执行逻辑(根据参数执行对应逻辑)</span></span><br><span class="line">    print(args)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure><p><br><br><span class="btn large center"><a href="<https://github.com/wongqingbin/blog/issues>" title="向博主反馈问题"><i class="fas fa-paper-plane"></i>向博主反馈问题</a></span></p>]]></content>
      
      
      <categories>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> argparse </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>python封装sqlite3</title>
      <link href="/ckpo6h1w10038fmnigj85gxwy/"/>
      <url>/ckpo6h1w10038fmnigj85gxwy/</url>
      
        <content type="html"><![CDATA[<p>python3使用Sqlite3本地数据库存储数据</p><a id="more"></a><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> sqlite3</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">dict_factory</span><span class="params">(cursor, row)</span>:</span></span><br><span class="line">    d = &#123;&#125;</span><br><span class="line">    <span class="keyword">for</span> idx, col <span class="keyword">in</span> enumerate(cursor.description):</span><br><span class="line">        d[col[<span class="number">0</span>]] = row[idx]</span><br><span class="line">    <span class="keyword">return</span> d</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Demo</span><span class="params">(object)</span>:</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self)</span>:</span></span><br><span class="line">        super(Demo, self).__init__()</span><br><span class="line">        self.conn = sqlite3.connect(<span class="string">'test.db'</span>)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">create</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">with</span> self.conn:</span><br><span class="line">            self.conn.execute(<span class="string">'''CREATE TABLE COMPANY</span></span><br><span class="line"><span class="string">               (ID INT PRIMARY KEY     NOT NULL,</span></span><br><span class="line"><span class="string">               NAME           TEXT    NOT NULL,</span></span><br><span class="line"><span class="string">               AGE            INT     NOT NULL,</span></span><br><span class="line"><span class="string">               ADDRESS        CHAR(50),</span></span><br><span class="line"><span class="string">               SALARY         REAL);'''</span></span><br><span class="line">            )</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">insert</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">with</span> self.conn:</span><br><span class="line">            self.conn.execute(<span class="string">"INSERT INTO COMPANY (ID,NAME,AGE,ADDRESS,SALARY) \</span></span><br><span class="line"><span class="string">               VALUES (5, 'Paul', 32, 'California', 20000.00 )"</span>)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">select</span><span class="params">(self)</span>:</span></span><br><span class="line">        self.conn.row_factory = dict_factory  <span class="comment"># 查询数据结果返回为字典：[&#123;&#125;,&#123;&#125;]</span></span><br><span class="line">        c = self.conn.cursor()</span><br><span class="line">        c.execute(<span class="string">"SELECT id, name, address, salary  from COMPANY"</span>)</span><br><span class="line">        print(c.fetchall())  <span class="comment"># [&#123;key: value, key: value&#125;, &#123;...&#125;, &#123;...&#125;]</span></span><br><span class="line">        print(c.fetchone())  <span class="comment"># [&#123;key: value, key: value&#125;]</span></span><br><span class="line">        <span class="keyword">return</span> c.fetchall()  <span class="comment"># List[Dict]</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">update</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">with</span> self.conn:</span><br><span class="line">            self.conn.execute(<span class="string">"UPDATE COMPANY set SALARY = 25000.00 where ID=1"</span>)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">delete</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">with</span> self.conn:</span><br><span class="line">            self.conn.execute(<span class="string">"DELETE from COMPANY where ID=2;"</span>)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__del__</span><span class="params">(self)</span>:</span></span><br><span class="line">        self.conn.close()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    obj = Demo()</span><br><span class="line">    <span class="comment"># obj.create()</span></span><br><span class="line">    <span class="comment"># obj.insert()</span></span><br><span class="line">    obj.select()</span><br><span class="line">    <span class="comment"># obj.update()</span></span><br><span class="line">    <span class="comment"># obj.delete()</span></span><br></pre></td></tr></table></figure><p><br><br><span class="btn large center"><a href="<https://github.com/wongqingbin/blog/issues>" title="向博主反馈问题"><i class="fas fa-paper-plane"></i>向博主反馈问题</a></span></p>]]></content>
      
      
      <categories>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> sqlite3 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>mysql指定日期的数据统计</title>
      <link href="/ckpo6h1w4003ifmni5i2e24vv/"/>
      <url>/ckpo6h1w4003ifmni5i2e24vv/</url>
      
        <content type="html"><![CDATA[<p>SQL查询之指定日期内的数据。<br>例如：今天、本周、本月、本季度、今年、近半年、近一个月、近7天</p><a id="more"></a><h2 id="mysql有关日期条件的查询语句"><a href="#mysql有关日期条件的查询语句" class="headerlink" title="mysql有关日期条件的查询语句"></a>mysql有关日期条件的查询语句</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#####################################</span></span><br><span class="line"><span class="comment"># 高版本使用CURDATE()  低版本使用NEW() #</span></span><br><span class="line"><span class="comment">####################################</span></span><br><span class="line"><span class="comment"># 查询今天 当天</span></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> <span class="string">`table_name`</span> <span class="keyword">WHERE</span> <span class="keyword">TO_DAYS</span>(col_name)=<span class="keyword">TO_DAYS</span>(<span class="keyword">NEW</span>());</span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取本周</span></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> <span class="string">`table_name`</span> <span class="keyword">WHERE</span> <span class="keyword">YEARWEEK</span>(<span class="keyword">DATE_FORMAT</span>(col_name,<span class="string">'%Y-%m-%d'</span>))=<span class="keyword">YEARWEEK</span>(<span class="keyword">NEW</span>());</span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取本月</span></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> <span class="string">`table_name`</span> <span class="keyword">WHERE</span> <span class="keyword">DATE_FORMAT</span>(col_name,<span class="string">'%Y-%m'</span>)=<span class="keyword">DATE_FORMAT</span>(<span class="keyword">NEW</span>(),<span class="string">'%Y-%m'</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取本季度</span></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> <span class="string">`table_name`</span> <span class="keyword">WHERE</span> <span class="keyword">QUARTER</span>(col_name)=<span class="keyword">QUARTER</span>(<span class="keyword">NEW</span>());</span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取本年</span></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> <span class="string">`table_name`</span> <span class="keyword">WHERE</span> <span class="keyword">YEAR</span>(col_name)=<span class="keyword">YEAR</span>(<span class="keyword">NEW</span>());</span><br><span class="line"></span><br><span class="line"><span class="comment">################################################################################</span></span><br><span class="line"><span class="comment"># 获取某年某月的数据, 第二种方式更常用DATE_FORMAT</span></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> <span class="string">`table_name`</span> <span class="keyword">WHERE</span> <span class="keyword">YEAR</span>(col_name)=<span class="number">2020</span> <span class="keyword">AND</span> <span class="keyword">MONTH</span>(col_name)=<span class="number">6</span>;</span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> <span class="string">`table_name`</span> <span class="keyword">WHERE</span> <span class="keyword">DATE_FORMAT</span>(col_name,<span class="string">'%Y-%m'</span>)=<span class="string">'2020-06'</span>;  <span class="comment"># %Y-%m对应2020-06  %Y-%c对应2020-6  区别0</span></span><br><span class="line"><span class="comment">################################################################################</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取近1月</span></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> <span class="string">`table_name`</span> <span class="keyword">WHERE</span> <span class="keyword">DATE_SUB</span>(<span class="keyword">NEW</span>(), <span class="built_in">INTERVAL</span> <span class="number">1</span> <span class="keyword">MONTH</span>) &lt;= <span class="built_in">DATE</span>(col_name);</span><br><span class="line"><span class="comment"># 获取近1星期 或 近7天数据</span></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> <span class="string">`table_name`</span> <span class="keyword">WHERE</span> <span class="keyword">DATE_SUB</span>(<span class="keyword">NEW</span>(), <span class="built_in">INTERVAL</span> <span class="number">7</span> <span class="keyword">DAY</span>) &lt;= <span class="built_in">DATE</span>(col_name);</span><br><span class="line"><span class="comment"># 获取近1年</span></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> <span class="string">`table_name`</span> <span class="keyword">WHERE</span> <span class="keyword">YEAR</span>(col_name)=<span class="keyword">YEAR</span>(<span class="keyword">DATE_SUB</span>(<span class="keyword">NEW</span>(),<span class="built_in">INTERVAL</span> <span class="number">1</span> <span class="keyword">YEAR</span>));</span><br><span class="line"><span class="comment"># 获取近1季度</span></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> <span class="string">`table_name`</span> <span class="keyword">WHERE</span> <span class="keyword">QUARTER</span>(col_name)=<span class="keyword">QUARTER</span>(<span class="keyword">DATE_SUB</span>(<span class="keyword">NEW</span>(),<span class="built_in">INTERVAL</span> <span class="number">1</span> <span class="keyword">QUARTER</span>));</span><br><span class="line"></span><br><span class="line"><span class="comment">#########################################</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取近半年内每个月的统计</span></span><br><span class="line"><span class="keyword">SELECT</span></span><br><span class="line"> <span class="keyword">COUNT</span>(*) <span class="keyword">as</span> nums, <span class="keyword">DATE_FORMAT</span>( col_name, <span class="string">'%Y-%m'</span> ) <span class="keyword">as</span> date_time</span><br><span class="line"><span class="keyword">FROM</span></span><br><span class="line"> <span class="string">`table_name`</span></span><br><span class="line"><span class="keyword">WHERE</span></span><br><span class="line"> <span class="keyword">DATE_SUB</span>( <span class="keyword">NEW</span>(), <span class="built_in">INTERVAL</span> <span class="number">6</span> <span class="keyword">MONTH</span> ) &lt;= <span class="built_in">DATE</span>( col_name )</span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span></span><br><span class="line"> date_time;</span><br><span class="line"><span class="comment"># 打印结果 ################</span></span><br><span class="line"><span class="comment"># nums  |  data_time</span></span><br><span class="line"><span class="comment">#  10   |    2020-01</span></span><br><span class="line"><span class="comment">#  50   |    2020-02</span></span><br><span class="line"><span class="comment">#  90   |    2020-03</span></span><br><span class="line"><span class="comment">#  30   |    2020-04</span></span><br><span class="line"><span class="comment">##########################</span></span><br><span class="line"></span><br><span class="line"><span class="comment">########################################################</span></span><br><span class="line"><span class="comment"># 数据库日期类型使用 datetime 即可</span></span><br><span class="line"><span class="comment">########################################################</span></span><br></pre></td></tr></table></figure><p><br><br><span class="btn large center"><a href="<https://github.com/wongqingbin/blog/issues>" title="向博主反馈问题"><i class="fas fa-paper-plane"></i>向博主反馈问题</a></span></p>]]></content>
      
      
      <categories>
          
          <category> sql </category>
          
      </categories>
      
      
        <tags>
            
            <tag> countdate </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>多线程编程threading</title>
      <link href="/ckpo6h1w2003dfmni4ko7fuql/"/>
      <url>/ckpo6h1w2003dfmni4ko7fuql/</url>
      
        <content type="html"><![CDATA[<p>python高级编程之多线程threading<br><a href="https://docs.python.org/zh-cn/3/library/threading.html#module-threading," target="_blank" rel="external nofollow noopener noreferrer" title="3.8">官方文档</a></p><a id="more"></a><h2 id="threading线程教程"><a href="#threading线程教程" class="headerlink" title="threading线程教程"></a>threading线程教程</h2><p><a href="https://docs.python.org/zh-cn/3/library/threading.html#module-threading," target="_blank" rel="external nofollow noopener noreferrer" title="3.8">官方文档</a></p><h3 id="简单线程"><a href="#简单线程" class="headerlink" title="简单线程"></a>简单线程</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> threading <span class="keyword">import</span> Thread</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">my_thread</span><span class="params">(data=<span class="string">'default'</span>)</span>:</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">5</span>):</span><br><span class="line">        print(data)</span><br><span class="line">        time.sleep(<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    thread_01 = Thread(target=my_thread, name=<span class="string">'thread_01'</span>)  <span class="comment"># name自定义线程名称</span></span><br><span class="line">    thread_02 = Thread(target=my_thread, name=<span class="string">'thread_02'</span>, args=(<span class="string">'undefault'</span>,))  <span class="comment"># args 使用元组传参，单个参数时需要加 (,) 将自动识别为元组</span></span><br><span class="line">    print(<span class="string">'1.strat...'</span>)</span><br><span class="line">    thread_01.start()</span><br><span class="line">    print(<span class="string">'2.strat...'</span>)</span><br><span class="line">    thread_02.start()</span><br><span class="line">    thread_01.join()  <span class="comment"># join作用：主线程等待子线程执行完毕后继续执行，但不阻塞其他子线程运行</span></span><br><span class="line">    thread_02.join()</span><br><span class="line">    print(<span class="string">'ending......'</span>)</span><br></pre></td></tr></table></figure><h3 id="线程加锁"><a href="#线程加锁" class="headerlink" title="线程加锁"></a>线程加锁</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> threading <span class="keyword">import</span> Thread, Lock</span><br><span class="line"></span><br><span class="line">lock = Lock()  <span class="comment"># Lock() 不能在线程中初始化，要在线程前先初始化</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">my_thread</span><span class="params">(data=<span class="string">'default'</span>)</span>:</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">5</span>):</span><br><span class="line">        lock.acquire()</span><br><span class="line">        print(data)</span><br><span class="line">        lock.release()</span><br><span class="line">        time.sleep(<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    thread_01 = Thread(target=my_thread, name=<span class="string">'thread_01'</span>)  <span class="comment"># name自定义线程名称</span></span><br><span class="line">    thread_02 = Thread(target=my_thread, name=<span class="string">'thread_02'</span>, args=(<span class="string">'undefault'</span>,))  <span class="comment"># args 使用元组传参，单个参数时需要加 (,) 将自动识别为元组</span></span><br><span class="line">    print(<span class="string">'1.strat...'</span>)</span><br><span class="line">    thread_01.start()</span><br><span class="line">    print(<span class="string">'2.strat...'</span>)</span><br><span class="line">    thread_02.start()</span><br><span class="line">    thread_01.join()  <span class="comment"># join作用：主线程等待子线程执行完毕后继续执行，但不阻塞其他子线程运行</span></span><br><span class="line">    thread_02.join()</span><br><span class="line">    print(<span class="string">'ending......'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">###</span></span><br><span class="line"><span class="comment"># 线程加锁前，在控制台打印的日志会有重叠，加锁后解决；</span></span><br><span class="line"><span class="comment"># 锁机制主要用来对操作共享数据的模块前后加锁，实现数据共享而不乱</span></span><br><span class="line"><span class="comment">###</span></span><br></pre></td></tr></table></figure><h3 id="类线程继承，实现多线程"><a href="#类线程继承，实现多线程" class="headerlink" title="类线程继承，实现多线程"></a>类线程继承，实现多线程</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> threading <span class="keyword">import</span> Thread, Lock</span><br><span class="line"></span><br><span class="line">lock = Lock()  <span class="comment"># Lock() 不能在线程中初始化，要在线程前先初始化</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">my_thread</span><span class="params">(data=<span class="string">'default'</span>)</span>:</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">5</span>):</span><br><span class="line">        lock.acquire()</span><br><span class="line">        print(data)</span><br><span class="line">        lock.release()</span><br><span class="line">        time.sleep(<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyThread</span><span class="params">(Thread)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, data=<span class="string">'default'</span>)</span>:</span></span><br><span class="line">        super().__init__()</span><br><span class="line">        self.name = name</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">run</span><span class="params">(self)</span>:</span></span><br><span class="line">        print(self.ident)</span><br><span class="line">        <span class="comment"># lock.acquire()  可在重新run方法中直接加锁</span></span><br><span class="line">        my_thread(self.name)</span><br><span class="line">        <span class="comment"># lock.release()  可在重新run方法中直接解锁</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    thread_03 = MyThread()</span><br><span class="line">    thread_04 = MyThread(data=<span class="string">'undefault'</span>)</span><br><span class="line">    thread_03.start()</span><br><span class="line">    thread_04.start()</span><br><span class="line">    thread_03.join()</span><br><span class="line">    thread_04.join()</span><br><span class="line">    print(<span class="string">'ending......'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">###</span></span><br><span class="line"><span class="comment"># 类实现线程：1.必须继承threading.Thread类；2.必须重写run方法来实现多线程模块</span></span><br><span class="line"><span class="comment">###</span></span><br></pre></td></tr></table></figure><p><br><br><span class="btn large center"><a href="<https://github.com/wongqingbin/blog/issues>" title="向博主反馈问题"><i class="fas fa-paper-plane"></i>向博主反馈问题</a></span></p>]]></content>
      
      
      <categories>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> threading </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>codeSnippet</title>
      <link href="/ckpo6h1sl0001fmnibuk96rfo/"/>
      <url>/ckpo6h1sl0001fmnibuk96rfo/</url>
      
        <content type="html"><![CDATA[<p><span class="p logo center large">Code Snippet</span><span class="p center small">Let's do this</span></p><p>&nbsp;&nbsp;&nbsp;&nbsp;测试开发人员常用的代码小片段分享，致力于实用、易懂、优雅的代码，让代码更加Pythonic。</p><span class="btn large center"><a href="wqb/snippet" title="Let" s go'><i class="fas fa-home"></i>Let's Go</a></span>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Python中的异常处理问题</title>
      <link href="/ckpo6h1vz0033fmnifvpdc2uj/"/>
      <url>/ckpo6h1vz0033fmnifvpdc2uj/</url>
      
        <content type="html"><![CDATA[<p>Python不同于其他语言的异常处理之超级优雅的方式</p><a id="more"></a><h2 id="优雅的异常处理"><a href="#优雅的异常处理" class="headerlink" title="优雅的异常处理"></a>优雅的异常处理</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    print(<span class="string">'这是要监控执行的代码块'</span>)</span><br><span class="line"><span class="keyword">except</span> A:</span><br><span class="line">    print(<span class="string">'A类型异常时执行此处'</span>)</span><br><span class="line"><span class="keyword">except</span> B:</span><br><span class="line">    print(<span class="string">'B类型异常时执行此处'</span>)</span><br><span class="line"><span class="keyword">except</span>:</span><br><span class="line">    print(<span class="string">'其他类型异常时执行此处'</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    print(<span class="string">'try监控的代码块无异常时执行此处'</span>)</span><br><span class="line"><span class="keyword">finally</span>:</span><br><span class="line">    print(<span class="string">'无论try代码块是否有异常均执行此处'</span>)</span><br></pre></td></tr></table></figure><p><br><br><span class="btn large center"><a href="<https://github.com/wongqingbin/blog/issues>" title="向博主反馈问题"><i class="fas fa-paper-plane"></i>向博主反馈问题</a></span></p>]]></content>
      
      
      <categories>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Exception </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>git rebase</title>
      <link href="/ckpo6h1vo002bfmniem3gder4/"/>
      <url>/ckpo6h1vo002bfmniem3gder4/</url>
      
        <content type="html"><![CDATA[<p>git管理代码库之git rebase变基，让代码提交历史更加清晰明了，使git log提交为一条线</p><a id="more"></a><h2 id="基础用法"><a href="#基础用法" class="headerlink" title="基础用法"></a>基础用法</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># dev分支合并前先变基</span></span><br><span class="line">dev&gt; git rebase master</span><br><span class="line"><span class="comment"># 如果遇到冲突，则解决完冲突后继续执行未完成的变基</span></span><br><span class="line">dev&gt; git rebase --<span class="built_in">continue</span></span><br><span class="line"><span class="comment"># 变基完成后，切换到master分支</span></span><br><span class="line">dev&gt; git checkout master</span><br><span class="line"><span class="comment"># master合并merge变基后的dev分支</span></span><br><span class="line">master&gt; git merge dev</span><br><span class="line"><span class="comment"># master分支提交代码</span></span><br><span class="line">master&gt; git push</span><br><span class="line"><span class="comment"># 切换回开发分支</span></span><br><span class="line">master&gt; git checkout dev</span><br><span class="line">dev&gt;</span><br></pre></td></tr></table></figure><p><br><br><span class="btn large center"><a href="<https://github.com/wongqingbin/blog/issues>" title="向博主反馈问题"><i class="fas fa-paper-plane"></i>向博主反馈问题</a></span></p>]]></content>
      
      
      <categories>
          
          <category> Git </category>
          
      </categories>
      
      
        <tags>
            
            <tag> git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>celery和redis交互全流程解析</title>
      <link href="/ckpo6h1vx0031fmni8jqnef9a/"/>
      <url>/ckpo6h1vx0031fmni8jqnef9a/</url>
      
        <content type="html"><![CDATA[<p>celery 和 redis 之间交互的基本原理</p><a id="more"></a><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"> celery 和 redis 之间交互的基本原理：</span><br><span class="line">1、当发起一个 task 时，会向 redis 的 celery key 中插入一条记录。</span><br><span class="line">2、如果这时有正在待命的空闲 worker，这个 task 会立即被 worker 领取。</span><br><span class="line">3、如果这时没有空闲的 worker，这个 task 的记录会保留在 celery key 中。</span><br><span class="line">4、这时会将这个 task 的记录从 key celery 中移除，并添加相关信息到 unacked 和 unacked_index 中。</span><br><span class="line">5、worker 根据 task 设定的期望执行时间执行任务，如果接到的不是延时任务或者已经超过了期望时间，则立刻执行。</span><br><span class="line">6、worker 开始执行任务时，通知 redis。（如果设置了 CELERY_ACKS_LATE &#x3D; True 那么会在任务执行结束时再通知）</span><br><span class="line">7、redis 接到通知后，将 unacked 和 unacked_index 中相关记录移除。</span><br><span class="line">8、如果在接到通知前，worker 中断了，这时 redis 中的 unacked 和 unacked_index 记录会重新回到 celery key 中。(这个回写的操作是由 worker 在 “临死” 前自己完成的，所以在关闭 worker 时为防止任务丢失，请务必使用正确的方法停止它，如: celery multi stop w1 -A proj1)</span><br><span class="line">9、在 celery key 中的 task 可以再次重复上述 2 以下的流程。</span><br><span class="line">10、celery 只是利用 redis 的 list 类型，当作个简单的 Queue，并没有使用消息订阅等功能</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">--------------</span><br><span class="line"></span><br><span class="line">1、需要配置celery的backend，backend的作用就是存储任务执行结果。</span><br><span class="line">2、当celery key中的任务成功被worker认领并且执行成功，celery会向配置好的bachend中，写入以task_id为key。</span><br><span class="line">3、所以，可以通过查看bachend中是否有以task_id为key的对象来判断task是否执行成功。</span><br></pre></td></tr></table></figure><p><br><br><span class="btn large center"><a href="<https://github.com/wongqingbin/blog/issues>" title="向博主反馈问题"><i class="fas fa-paper-plane"></i>向博主反馈问题</a></span></p>]]></content>
      
      
      <categories>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> celery </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>copy</title>
      <link href="/ckpo6h1ux000rfmni1fiy181b/"/>
      <url>/ckpo6h1ux000rfmni1fiy181b/</url>
      
        <content type="html"><![CDATA[<p>图片增加容量大小使用方法</p><a id="more"></a><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">copy 1M.jpg /b + 5M.file /b 6M.jpg</span><br><span class="line"><span class="comment"># or</span></span><br><span class="line">copy /b 1M.jpg + 5M.file 6M.jpg</span><br></pre></td></tr></table></figure><p><br><br><span class="btn large center"><a href="<https://github.com/wongqingbin/blog/issues>" title="向博主反馈问题"><i class="fas fa-paper-plane"></i>向博主反馈问题</a></span></p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> copy </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Kindle</title>
      <link href="/ckpo6h1uq000kfmni9bp42tx0/"/>
      <url>/ckpo6h1uq000kfmni9bp42tx0/</url>
      
        <content type="html"><![CDATA[<p>Kindle使用教程</p><a id="more"></a><h2 id="免费电子书下载地址"><a href="#免费电子书下载地址" class="headerlink" title="免费电子书下载地址"></a>免费电子书下载地址</h2><ul><li><a href="http://panghubook.cn/" target="_blank" rel="external nofollow noopener noreferrer">http://panghubook.cn/</a></li><li><a href="https://kindle.51nazhun.pub/" target="_blank" rel="external nofollow noopener noreferrer">https://kindle.51nazhun.pub/</a></li><li><a href="https://www.jiumodiary.com/" target="_blank" rel="external nofollow noopener noreferrer">https://www.jiumodiary.com/</a></li></ul><p><br><br><span class="btn large center"><a href="<https://github.com/wongqingbin/blog/issues>" title="向博主反馈问题"><i class="fas fa-paper-plane"></i>向博主反馈问题</a></span></p>]]></content>
      
      
      <categories>
          
          <category> Kindle </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Kindle </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>git修改用户名密码</title>
      <link href="/ckpo6h1vm0026fmnigqy2d81b/"/>
      <url>/ckpo6h1vm0026fmnigqy2d81b/</url>
      
        <content type="html"><![CDATA[<p>用户使用git时的使用免密拉取和上传，修改免密设置，取消免密设置</p><a id="more"></a><h2 id="第一次输入密码之后自动免密"><a href="#第一次输入密码之后自动免密" class="headerlink" title="第一次输入密码之后自动免密"></a>第一次输入密码之后自动免密</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># git 默认即支持首次输入用户名密码，后续自动记忆，使用免密设置</span></span><br></pre></td></tr></table></figure><h2 id="取消免密设置"><a href="#取消免密设置" class="headerlink" title="取消免密设置"></a>取消免密设置</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global --<span class="built_in">unset</span> credential.helper store</span><br><span class="line"><span class="comment"># 使用 --global 参数则全局生效，不适用则针对当前目录下的.git生效</span></span><br></pre></td></tr></table></figure><h2 id="设置免密"><a href="#设置免密" class="headerlink" title="设置免密"></a>设置免密</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global credential.helper store</span><br><span class="line"><span class="comment"># 使用 --global 参数则全局生效，不适用则针对当前目录下的.git生效</span></span><br></pre></td></tr></table></figure><h2 id="适用场景"><a href="#适用场景" class="headerlink" title="适用场景"></a>适用场景</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 大多公司的账户密码考虑到安全性，隔段时间便会失效，需更改密码</span></span><br><span class="line"><span class="comment"># 这个时候大多git默认已经记忆上次用户名和密码，且不用跳出输入用户和密码的弹窗</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 1. 取消免密功能，使它能正确弹出用户名和密码框</span></span><br><span class="line">git config --global --<span class="built_in">unset</span> credential.helper store</span><br><span class="line"><span class="comment"># 2. 使用git拉取或提交代码，相当于首次提交 会自动弹出用户名密码弹窗，输入即可</span></span><br><span class="line"><span class="comment"># 3. 再次打开免密功能，记忆第二步的用户名和密码</span></span><br><span class="line">git config --global credential.helper store</span><br></pre></td></tr></table></figure><h2 id="win图形化修改git提交密码"><a href="#win图形化修改git提交密码" class="headerlink" title="win图形化修改git提交密码"></a>win图形化修改git提交密码</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 设置路径</span></span><br><span class="line"><span class="comment"># 控制面板 --&gt; 用户账号 --&gt; 凭据管理器 --&gt; windows凭据 --&gt; 修改对应的git地址的用户名和密码后保存即可</span></span><br></pre></td></tr></table></figure><p><br><br><span class="btn large center"><a href="<https://github.com/wongqingbin/blog/issues>" title="向博主反馈问题"><i class="fas fa-paper-plane"></i>向博主反馈问题</a></span></p>]]></content>
      
      
      <categories>
          
          <category> Git </category>
          
      </categories>
      
      
        <tags>
            
            <tag> git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Charles</title>
      <link href="/ckpo6h1uh000afmnie26w516o/"/>
      <url>/ckpo6h1uh000afmnie26w516o/</url>
      
        <content type="html"><![CDATA[<p>Charles 注册码</p><a id="more"></a><h2 id="Charles-注册码"><a href="#Charles-注册码" class="headerlink" title="Charles 注册码"></a>Charles 注册码</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">CCF</span><br><span class="line">4cfbb2ea5c75c77858</span><br></pre></td></tr></table></figure><p><br><br><span class="btn large center"><a href="<https://github.com/wongqingbin/blog/issues>" title="向博主反馈问题"><i class="fas fa-paper-plane"></i>向博主反馈问题</a></span></p>]]></content>
      
      
      <categories>
          
          <category> Charles </category>
          
      </categories>
      
      
        <tags>
            
            <tag> licenses </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Mac安装并配置Jenkins</title>
      <link href="/ckpo6h1un000gfmnid7ce1xv5/"/>
      <url>/ckpo6h1un000gfmnid7ce1xv5/</url>
      
        <content type="html"><![CDATA[<p>Mac使用Homebrew包管理器安装并配置管理Jenkins</p><a id="more"></a><h2 id="mac安装Jenkins"><a href="#mac安装Jenkins" class="headerlink" title="mac安装Jenkins"></a>mac安装Jenkins</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 1. Mac安装JDK并配置环境变量</span></span><br><span class="line"><span class="comment"># 2.安装Jenkins</span></span><br><span class="line">brew install jenkins</span><br><span class="line">brew services start jenkins  <span class="comment"># 命令会自动设置为开机启动</span></span><br><span class="line">brew services stop jenkins</span><br><span class="line">brew services restart jenkins</span><br><span class="line"><span class="comment"># 局域网访问:</span></span><br><span class="line"><span class="comment"># 使用brew安装jenkins会避免很多其他安装方式产生的用户权限问题，但是会将httpListenAddress默认设置为127.0.0.1，这样我们虽然可以在本地用localhost:8080访问，但是本机和局域网均无法用ip访问。解决办法为修改两个路径下的plist配置。并重启</span></span><br><span class="line"><span class="comment"># ～/Library/LaunchAgents/homebrew.mxcl.jenkins.plist</span></span><br><span class="line"><span class="comment"># /usr/local/opt/jenkins/homebrew.mxcl.jenkins.plist</span></span><br><span class="line"><span class="comment"># 将上面两个plist中的httpListenAddress后的ip地址，修改为本机IP或者0.0.0.0即可。</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 取消开机启动</span></span><br><span class="line">sudo launchctl unload -w /Library/LaunchDaemons/org.jenkins-ci.plist</span><br><span class="line"><span class="comment"># 设置开机启动</span></span><br><span class="line">sudo launchctl load -w /Library/LaunchDaemons/org.jenkins-ci.plist</span><br></pre></td></tr></table></figure><p><br><br><span class="btn large center"><a href="<https://github.com/wongqingbin/blog/issues>" title="向博主反馈问题"><i class="fas fa-paper-plane"></i>向博主反馈问题</a></span></p>]]></content>
      
      
      <categories>
          
          <category> Jenkins </category>
          
      </categories>
      
      
        <tags>
            
            <tag> jenkins </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>interview</title>
      <link href="/ckpo6h1uj000cfmnidmdv4vxl/"/>
      <url>/ckpo6h1uj000cfmnidmdv4vxl/</url>
      
        <content type="html"><![CDATA[<p>Interview</p><a id="more"></a><h2 id="基础篇"><a href="#基础篇" class="headerlink" title="基础篇"></a>基础篇</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 1. 冒泡排序</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">bubble_sort</span><span class="params">(data)</span>:</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(len(data)<span class="number">-1</span>, <span class="number">-1</span>, <span class="number">-1</span>):</span><br><span class="line">        flag = <span class="literal">False</span></span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> range(i):</span><br><span class="line">            <span class="keyword">if</span> data[j] &gt; data[j + <span class="number">1</span>]:</span><br><span class="line">                data[j], data[j + <span class="number">1</span>] = data[j + <span class="number">1</span>], data[j]</span><br><span class="line">                flag = <span class="literal">True</span></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> flag:</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        print(<span class="string">'第&#123;0&#125;次排序: &#123;1&#125;'</span>.format(len(data)-i, data))</span><br><span class="line">    <span class="keyword">return</span> data</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 2. 装饰器单例</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">singleton</span><span class="params">(cls, *args, **kwargs)</span>:</span></span><br><span class="line">    _instance = &#123;&#125;</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_instance</span><span class="params">()</span>:</span></span><br><span class="line">        <span class="keyword">if</span> cls <span class="keyword">not</span> <span class="keyword">in</span> _instance:</span><br><span class="line">            _instance.setdefault(cls, cls(*args, **kwargs))</span><br><span class="line">        <span class="keyword">return</span> _instance.get(cls)</span><br><span class="line">    <span class="keyword">return</span> get_instance</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">################ sql</span></span><br><span class="line"><span class="comment"># 添加</span></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> tablename(<span class="keyword">id</span>,<span class="keyword">name</span>) <span class="keyword">values</span>(<span class="number">1</span>,w)</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> tablename <span class="keyword">values</span>(<span class="number">1</span>,w)</span><br><span class="line"><span class="comment"># 更新</span></span><br><span class="line"><span class="keyword">update</span> tablename <span class="keyword">set</span> 字段名=<span class="string">'newvalue'</span> <span class="keyword">where</span></span><br><span class="line"><span class="comment"># 删除</span></span><br><span class="line"><span class="keyword">delete</span> <span class="keyword">from</span> tablename <span class="keyword">where</span></span><br><span class="line"><span class="comment"># 查找</span></span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> tablename <span class="keyword">where</span></span><br><span class="line"><span class="comment"># 分组</span></span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> 字段名 <span class="keyword">having</span> <span class="keyword">avg</span>()</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">############# Linux</span></span><br><span class="line"><span class="comment"># 查看进程</span></span><br><span class="line">ps -ef | grep <span class="string">'kafka'</span>  <span class="comment"># 显示PID</span></span><br><span class="line"><span class="comment"># 杀死进程</span></span><br><span class="line"><span class="built_in">kill</span> -9 PID</span><br><span class="line"></span><br><span class="line"><span class="comment"># 实时查看日志后十行file.log</span></span><br><span class="line">tail -n 10 -f file.log  <span class="comment"># tail -f  == tailf</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 复制</span></span><br><span class="line">cp -a oldfile newfolder</span><br><span class="line"></span><br><span class="line"><span class="comment"># 检查端口号是否被占用</span></span><br><span class="line">netstat -anp | grep 8080</span><br><span class="line"></span><br><span class="line"><span class="comment"># mkdir 创建目录</span></span><br><span class="line">mkdir a</span><br><span class="line">mkdir -p a/b/c  <span class="comment"># 创建多级目录时使用 -p 命令</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># rm 删除目录、文件</span></span><br><span class="line">rm -rf a/b/c  f  <span class="comment"># 不提醒确认则删除     shell脚本中常用  r是目录也删除，递归删除</span></span><br><span class="line">rm -r a/b/c     <span class="comment"># 提醒用户是否确认删除  命令行使用</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># cat 查看文件</span></span><br><span class="line"><span class="comment"># cat -n [文件名]  -n 显示行号</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># cp  拷贝文件</span></span><br><span class="line">cp A.txt b.txt</span><br><span class="line">cp a b</span><br><span class="line"></span><br><span class="line"><span class="comment"># echo  $PATH</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># grep</span></span><br><span class="line">cat -n A.txt | grep filter  <span class="comment"># 只显示filter内容</span></span><br><span class="line">cat -n A.txt | grep -v filter  <span class="comment"># -v不显示filter内容</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># find</span></span><br><span class="line">fine /root -name A.txt</span><br><span class="line"></span><br><span class="line"><span class="comment"># ps  查看进程PID</span></span><br><span class="line">ps -ef | grep mongo</span><br><span class="line"></span><br><span class="line"><span class="comment"># kill -9 结束进程(根据PID)</span></span><br><span class="line"><span class="built_in">kill</span> -9 [PID]</span><br><span class="line"></span><br><span class="line"><span class="comment"># mv</span></span><br><span class="line">mv a.txt /a/b</span><br><span class="line"></span><br><span class="line"><span class="comment"># netstat 检查端口是否被占用</span></span><br><span class="line">netstat -anp | grep 8080</span><br><span class="line"></span><br><span class="line"><span class="comment"># yum search package</span></span><br><span class="line"><span class="comment"># yum install package</span></span><br><span class="line"><span class="comment"># yum uninstall package</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># sed 修改文本</span></span><br><span class="line">sed -e <span class="string">'s/oldstr/newstr/g'</span> A.txt  <span class="comment"># 's'字符串 'g'全局替换</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># tar</span></span><br><span class="line">tar -zcvf a.tar.gz /root/a  <span class="comment">#归档打包</span></span><br><span class="line">tar -zxvf a.tar.gz /root/a  <span class="comment">#解压缩</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># awk 处理带格式文件文本</span></span><br><span class="line"><span class="built_in">kill</span> -9 `ps | grep bash | awk <span class="string">' '</span> <span class="string">'&#123;print $1&#125;'</span>`  <span class="comment">#  === kill -9 PID</span></span><br><span class="line"><span class="comment"># awk ' ' 空格分割字符串</span></span><br><span class="line"><span class="comment"># awk '&#123;print $1&#125;' 打印或取值第一个</span></span><br><span class="line"><span class="comment"># ` ` 代表执行代码块获取执行结果，优先执行</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># nohub 不挂起进行 命令行保护进程启动程序</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># head 从头开始查看文件前10行</span></span><br><span class="line">head -n 10 a.log</span><br><span class="line"><span class="comment"># tail</span></span><br><span class="line">tail -n 10 a.log  <span class="comment"># 从末尾开始查看文件最后10行</span></span><br><span class="line">tail -f a.log     <span class="comment"># 实时查看末尾</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># less</span></span><br><span class="line"><span class="comment"># more</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># touch、vi 创建文件</span></span><br><span class="line">touch a.txt</span><br><span class="line">vi a.sh</span><br><span class="line"></span><br><span class="line"><span class="comment"># history  查看命令行的历史命令</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># chmod  赋权限</span></span><br><span class="line">chmod 777 A.txt</span><br><span class="line">chmod -x A.txt</span><br><span class="line"><span class="comment"># x可执行权限 r只读 w写</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># rz 上传  yum install lrzsz</span></span><br><span class="line"><span class="comment"># sz 下载</span></span><br><span class="line"><span class="comment"># scp 文件传输</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># wc</span></span><br><span class="line">wc -l a/b/A.txt  <span class="comment"># 统计文件行数</span></span><br><span class="line"><span class="comment"># du</span></span><br><span class="line">du -sh A.txt   <span class="comment"># 查看文件大小</span></span><br><span class="line">du -sh /a/b    <span class="comment"># 查看目录大小</span></span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">    测试用例八大要素</span><br><span class="line">用例编号</span><br><span class="line">操作步骤</span><br><span class="line">测试标题</span><br><span class="line">重要级别</span><br><span class="line">前置条件</span><br><span class="line">测试输入</span><br><span class="line">所属模块</span><br><span class="line">预期结果</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">黑盒测试用例设计方法包括等价类划分法、边界值分析法、错误推测法、因果图法、判定表驱动法、正交试验设计法、功能图法、场景图法等。</span><br><span class="line"></span><br><span class="line">白盒子测试方法：（强度由低到高）语句覆盖、判定覆盖、条件覆盖、判定条件覆盖、条件组合覆盖、路径覆盖。</span><br><span class="line"></span><br><span class="line">测试人员经常用到的有等价类，边界值，场景法，因果图法。</span><br></pre></td></tr></table></figure><p><br><br><span class="btn large center"><a href="<https://github.com/wongqingbin/blog/issues>" title="向博主反馈问题"><i class="fas fa-paper-plane"></i>向博主反馈问题</a></span></p>]]></content>
      
      
      <categories>
          
          <category> Interview </category>
          
      </categories>
      
      
        <tags>
            
            <tag> interview </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Jenkins部署Python</title>
      <link href="/ckpo6h1up000ifmni88xygd3l/"/>
      <url>/ckpo6h1up000ifmni88xygd3l/</url>
      
        <content type="html"><![CDATA[<p>Jenkins部署 - 使用shell脚本后台守护进程运行</p><a id="more"></a><h2 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 保证程序后台运行不杀死  和 nohub、&amp; 一同使用</span></span><br><span class="line">BUILD_ID=dontKillMe</span><br><span class="line"></span><br><span class="line"><span class="comment"># source /root/.bash_profile</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 停止服务(先杀死Python当前运行的进程)</span></span><br><span class="line"><span class="comment"># ps -ef | grep python3 | grep -v grep | awk -F ' ' '&#123;print $2&#125;' | xargs kill -9</span></span><br><span class="line">pid=`ps -ef | grep python3 | grep -v grep | awk -F <span class="string">' '</span> <span class="string">'&#123;print $2&#125;'</span>`</span><br><span class="line"><span class="keyword">for</span> p <span class="keyword">in</span> <span class="variable">$&#123;pid[@]&#125;</span>;</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line"> <span class="built_in">kill</span> -9 <span class="variable">$p</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除目录</span></span><br><span class="line"><span class="keyword">if</span> [ -d /root/Jenkins/production ];</span><br><span class="line"><span class="keyword">then</span></span><br><span class="line"> rm -rf /root/Jenkins/production</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建新部署目录</span></span><br><span class="line">mkdir -p /root/Jenkins/production</span><br><span class="line"></span><br><span class="line"><span class="comment"># 进入部署目录</span></span><br><span class="line"><span class="built_in">cd</span> /root/Jenkins/production</span><br><span class="line"></span><br><span class="line"><span class="comment"># 拉取代码</span></span><br><span class="line">git <span class="built_in">clone</span> &lt;url&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 进入</span></span><br><span class="line"><span class="built_in">cd</span> &lt;proj_path&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 启动  BUILD_ID=dontKillMe  保证程序后台运行不杀死  和 nohub、&amp; 一同使用</span></span><br><span class="line">nohup python3 app.py &gt;/dev/null 2&gt;&amp;1 &amp;</span><br></pre></td></tr></table></figure><p><br><br><span class="btn large center"><a href="<https://github.com/wongqingbin/blog/issues>" title="向博主反馈问题"><i class="fas fa-paper-plane"></i>向博主反馈问题</a></span></p>]]></content>
      
      
      <categories>
          
          <category> Jenkins </category>
          
      </categories>
      
      
        <tags>
            
            <tag> shell </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CentOS 7 firewalld</title>
      <link href="/ckpo6h1v1000zfmni7g759k8o/"/>
      <url>/ckpo6h1v1000zfmni7g759k8o/</url>
      
        <content type="html"><![CDATA[<p>CentOS 7 通过防火墙开放指定端口</p><a id="more"></a><h2 id="firewall-cmd"><a href="#firewall-cmd" class="headerlink" title="firewall-cmd"></a>firewall-cmd</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看开通端口列表</span></span><br><span class="line">firewall-cmd --list-ports</span><br><span class="line"></span><br><span class="line"><span class="comment"># 开放80端口</span></span><br><span class="line">firewall-cmd --permanent --zone=public --add-port=80/tcp</span><br><span class="line"></span><br><span class="line"><span class="comment"># 关闭80端口</span></span><br><span class="line">firewall-cmd --zone=public --remove-port=80/tcp --permanent</span><br><span class="line"></span><br><span class="line"><span class="comment"># 重启防火墙生效</span></span><br><span class="line">systemctl restart firewalld</span><br><span class="line"></span><br><span class="line"><span class="comment"># PS:</span></span><br><span class="line"><span class="comment"># firewalld配置的防火墙策略也分为两种模式</span></span><br><span class="line"><span class="comment"># 1、runtime，当前生效，重启后失效</span></span><br><span class="line"><span class="comment"># 2、permanent，当前失效，重启后生效，为了让permanet生效，一般会执行friewall-cmd --reload，使其立即生效</span></span><br></pre></td></tr></table></figure><h2 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h2><ul><li>Linux上新的防火墙软件，和iptables差不多的工具。firewalld是centos7的一大特性，两大优点：支持动态更新，不用重启服务；加入了防火墙的“zone”概念。</li><li>firewalld能动态修改单条规则，不像iptables，修改规则后必须全部刷新才能生效。</li><li>firewalld在使用上要比iptables人性化很多。firewalld自身并不具备防火墙的功能，而是和iptables一样需要通过内核的netfilter来实现，也就是说firewalld和iptables一样，他们的作用都是用于维护规则，而真正使用规则干活的是内核的netfilter。</li></ul><hr><ul><li><p>rpm -qa | grep firewalld | 查看是否安装</p></li><li><p>yum install firewalld 安装</p></li><li><p>rpm -qa | grep firewall-config 查看是否安装图形界面</p></li><li><p>yum install firewall-config 如果需要图形界面的话，需要安装</p></li><li><p>systemctl start firewalld 启动</p></li><li><p>systemctl restart firewalld 重启</p></li><li><p>systemctl disable firewalld 停止</p></li><li><p>systemctl stop firewalld 禁用</p></li><li><p>systemctl status firewalld | - firewall-cmd --state 查看状态</p></li><li><p>firewall-cmd --list-ports 查看开通端口列表</p></li><li><p>firewall-cmd --zone=public --remove-port=80/tcp --permanent 关闭端口</p></li><li><p>firewall-cmd --permanent --zone=public --add-port=80/tcp 开通端口</p></li><li><p>firewall-cmd --get-default-zone 查看default zone</p></li><li><p>firewall-cmd --get-active-zones 查看active zone</p></li><li><p>备注：--zone #作用域 --add-port=80/tcp #添加端口，格式为：端口/通讯协议 --permanent #永久生效，没有此参数重启后失效<br>firewall防火墙默认的几个zone（由firewalld 提供的区域按照从不信任到信任的顺序排序）</p></li></ul><p><br><br><span class="btn large center"><a href="<https://github.com/wongqingbin/blog/issues>" title="向博主反馈问题"><i class="fas fa-paper-plane"></i>向博主反馈问题</a></span></p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> firewalld </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CentOS 7 安装 network</title>
      <link href="/ckpo6h1va001ffmni8mxwbhlp/"/>
      <url>/ckpo6h1va001ffmni8mxwbhlp/</url>
      
        <content type="html"><![CDATA[<p>CentOS 7网络配置(Mac虚拟机下的共享配置)</p><a id="more"></a><h2 id="编辑网络配置文件"><a href="#编辑网络配置文件" class="headerlink" title="编辑网络配置文件"></a>编辑网络配置文件</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 编辑配置文件ifcfg-eth0 ifcfg-eth1 ...</span></span><br><span class="line">vi /etc/sysconfig/network-scripts/ifcfg-eth0</span><br><span class="line"><span class="comment"># 复制以下项</span></span><br><span class="line">DEVICE=eth0</span><br><span class="line">BOOTPROTO=static</span><br><span class="line">NOBOOT=yes</span><br><span class="line">IPADDR=192.168.10.192</span><br><span class="line">NETMASK=255.255.252.0</span><br><span class="line">GATEWAY=192.168.10.254</span><br><span class="line">DNS1=192.168.10.3</span><br><span class="line">DNS2=223.6.6.6</span><br><span class="line">NM_CONTROLLED=no</span><br><span class="line"></span><br><span class="line"><span class="comment"># 重启网络CentOS7网络后生效</span></span><br><span class="line">systemctl restart network</span><br></pre></td></tr></table></figure><h2 id="参数解读"><a href="#参数解读" class="headerlink" title="参数解读"></a>参数解读</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 注：这里面的IP地址，子网掩码，GATE ，DNS都按照主机的配置。</span></span><br><span class="line"><span class="comment"># 之后，重启一下虚拟机应该就可以。</span></span><br><span class="line"><span class="comment"># 之后，ping下主机IP地址，ping 下局域网其他主机IP地址，再ping下外网ip地址，可以的话就算成功</span></span><br><span class="line"></span><br><span class="line"><span class="comment">####################################</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 从dhcp改成static</span></span><br><span class="line">BOOTPROTO=static</span><br><span class="line"><span class="comment"># 从no改成yes。系统将在启动时自动开启该接口。</span></span><br><span class="line">ONBOOT=yes</span><br><span class="line"><span class="comment"># 设置IP地址</span></span><br><span class="line">IPADDR=</span><br><span class="line"><span class="comment"># 设置子网掩码</span></span><br><span class="line">NETMASK=</span><br><span class="line"><span class="comment"># 设置网关</span></span><br><span class="line">GATEWAY=</span><br><span class="line"><span class="comment"># 设置DNS</span></span><br><span class="line">DNS1=</span><br><span class="line">DNS2=</span><br><span class="line"><span class="comment"># 表示该接口将通过该配置文件进行设置，而不是通过网络管理器进行管理</span></span><br><span class="line">NM_CONTROLLED=no</span><br><span class="line"></span><br><span class="line"><span class="comment">####################################</span></span><br></pre></td></tr></table></figure><p><br><br><span class="btn large center"><a href="<https://github.com/wongqingbin/blog/issues>" title="向博主反馈问题"><i class="fas fa-paper-plane"></i>向博主反馈问题</a></span></p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> network </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CentOS 7 时间时区调整</title>
      <link href="/ckpo6h1vj001xfmnif3rfgj0n/"/>
      <url>/ckpo6h1vj001xfmnif3rfgj0n/</url>
      
        <content type="html"><![CDATA[<p>CentOS 7 调整时间为中国时区时间</p><a id="more"></a><h2 id="启用NTP同步"><a href="#启用NTP同步" class="headerlink" title="启用NTP同步"></a>启用NTP同步</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 安装ntp服务</span></span><br><span class="line">yum install ntp</span><br><span class="line"><span class="comment"># 开机启动服务</span></span><br><span class="line">systemctl <span class="built_in">enable</span> ntpd</span><br><span class="line"><span class="comment"># 启动服务</span></span><br><span class="line">systemctl start ntpd</span><br><span class="line"><span class="comment"># 更改时区</span></span><br><span class="line">timedatectl <span class="built_in">set</span>-timezone Asia/Shanghai</span><br><span class="line"><span class="comment"># 启用ntp同步</span></span><br><span class="line">timedatectl <span class="built_in">set</span>-ntp yes</span><br><span class="line"><span class="comment"># 同步时间</span></span><br><span class="line">ntpq -p</span><br></pre></td></tr></table></figure><h2 id="timedatectl-命令同步时区"><a href="#timedatectl-命令同步时区" class="headerlink" title="timedatectl 命令同步时区"></a>timedatectl 命令同步时区</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 读取时间  等同于 timedatectl status</span></span><br><span class="line">timedatectl</span><br><span class="line"><span class="comment"># 设置时间</span></span><br><span class="line">timedatectl <span class="built_in">set</span>-time <span class="string">"YYYY-MM-DD HH:MM:SS"</span></span><br><span class="line"><span class="comment"># 列出所有时区</span></span><br><span class="line">timedatectl list-timezones</span><br><span class="line"><span class="comment"># 更改时区</span></span><br><span class="line">timedatectl <span class="built_in">set</span>-timezone Asia/Shanghai</span><br><span class="line"><span class="comment"># 或   ln -sf /usr/share/zoneinfor/Asia/Shanghai /etc/localtime</span></span><br><span class="line">设置是否与NTP服务器同步 //yes或者no</span><br><span class="line">timedatectl <span class="built_in">set</span>-ntp yes</span><br><span class="line"><span class="comment"># 将硬件时钟调整为与本地时钟一致</span></span><br><span class="line">hwclock --systohc --localtime 或 timedatectl <span class="built_in">set</span>-local-rtc 1</span><br><span class="line"><span class="comment"># 注，硬件时钟默认使用UTC时间，因为硬件时钟不能保存时区和夏令时调整，修改后就无法从硬件时钟中读取出准确标准时间，因此不建议修改。修改后系统会出现警告。</span></span><br><span class="line"><span class="comment"># 将硬件时间设置成 UTC</span></span><br><span class="line">hwclock --systohc --utc 或 timedatectl <span class="built_in">set</span>-local-rtc 1</span><br><span class="line"><span class="comment"># 显示硬件时间：</span></span><br><span class="line">hwclock --show</span><br><span class="line"><span class="comment"># 设置硬件时间：</span></span><br><span class="line">hwclock --<span class="built_in">set</span> --date ‘08/02/2012 12:00:00’</span><br><span class="line"><span class="comment"># 将硬件时间同步到系统时间：</span></span><br><span class="line">hwclock --hctosys</span><br><span class="line"><span class="comment"># 强制把系统时间写入CMOS：</span></span><br><span class="line"><span class="comment"># clock -w</span></span><br></pre></td></tr></table></figure><h2 id="时钟概念"><a href="#时钟概念" class="headerlink" title="时钟概念"></a>时钟概念</h2><ul><li><p>在CentOS 6版本，时间设置有date、hwclock命令，从CentOS 7开始，使用了一个新的命令timedatectl。</p></li><li><p>（1）UTC<br>整个地球分为二十四时区，每个时区都有自己的本地时间。在国际无线电通信场合，为了统一起见，使用一个统一的时间，称为通用协调时(UTC, Universal Time Coordinated)。</p></li><li><p>（2）GMT<br>格林威治标准时间 (Greenwich Mean Time)指位于英国伦敦郊区的皇家格林尼治天文台的标准时间，因为本初子午线被定义在通过那里的经线。(UTC与GMT时间基本相同，本文中不做区分)</p></li><li><p>（3）CST<br>中国标准时间 (China Standard Time)【GMT + 8 = UTC + 8 = CST】</p></li><li><p>（4）DST<br>夏令时(Daylight Saving Time) 指在夏天太阳升起的比较早时，将时钟拨快一小时，以提早日光的使用。（中国不使用）</p></li><li><p>硬件时钟：<br>RTC(Real-Time Clock)或CMOS时钟，一般在主板上靠电池供电，服务器断电后也会继续运行。仅保存日期时间数值，无法保存时区和夏令时设置。</p></li><li><p>系统时钟：<br>一般在服务器启动时复制RTC时间，之后独立运行，保存了时间、时区和夏令时设置。</p></li></ul><p><br><br><span class="btn large center"><a href="<https://github.com/wongqingbin/blog/issues>" title="向博主反馈问题"><i class="fas fa-paper-plane"></i>向博主反馈问题</a></span></p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> timedatectl </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CentOS 7 安装 nginx</title>
      <link href="/ckpo6h1vc001jfmni31k0cgam/"/>
      <url>/ckpo6h1vc001jfmni31k0cgam/</url>
      
        <content type="html"><![CDATA[<p>CentOS 7 安装 nginx</p><a id="more"></a><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 安装依赖包 c编译gcc依赖</span></span><br><span class="line">yum install gcc-c++ pcre pcre-devel zlib zlib-devel openssl openssl-devel</span><br><span class="line"><span class="comment"># 下载安装包</span></span><br><span class="line">wget -c https://nginx.org/download/nginx-1.12.0.tar.gz</span><br><span class="line"><span class="comment"># 解压安装包</span></span><br><span class="line">tar -zxvf nginx-1.12.0.tar.gz</span><br><span class="line"><span class="comment"># 进入安装包</span></span><br><span class="line"><span class="built_in">cd</span> nginx-1.12.0</span><br><span class="line"><span class="comment"># 编译预处理</span></span><br><span class="line">./configure</span><br><span class="line"><span class="comment"># 编译并安装</span></span><br><span class="line">make &amp;&amp; make install</span><br><span class="line"></span><br><span class="line"><span class="comment"># 进入nginx目录</span></span><br><span class="line"><span class="built_in">cd</span> /usr/<span class="built_in">local</span>/nginx/sbin/</span><br><span class="line"><span class="comment"># 启动nginx ./nginx [-s stop|reload]</span></span><br><span class="line">./nginx -s reload -t</span><br></pre></td></tr></table></figure><h2 id="配置文件路径说明"><a href="#配置文件路径说明" class="headerlink" title="配置文件路径说明"></a>配置文件路径说明</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># ./configure           \</span></span><br><span class="line"><span class="comment"># --prefix=/etc/nginx                     \</span></span><br><span class="line"><span class="comment"># --sbin-path=/usr/sbin/nginx                 \</span></span><br><span class="line"><span class="comment"># --conf-path=/etc/nginx/nginx.conf              \</span></span><br><span class="line"><span class="comment"># --error-log-path=/var/log/nginx/error.log          \</span></span><br><span class="line"><span class="comment"># --http-log-path=/var/log/nginx/access.log          \</span></span><br><span class="line"><span class="comment"># --pid-path=/var/run/nginx.pid                \</span></span><br><span class="line"><span class="comment"># --lock-path=/var/run/nginx.lock</span></span><br></pre></td></tr></table></figure><p><br><br><span class="btn large center"><a href="<https://github.com/wongqingbin/blog/issues>" title="向博主反馈问题"><i class="fas fa-paper-plane"></i>向博主反馈问题</a></span></p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> nginx </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CentOS 7 安装 mongodb</title>
      <link href="/ckpo6h1v9001cfmni04h3ajko/"/>
      <url>/ckpo6h1v9001cfmni04h3ajko/</url>
      
        <content type="html"><![CDATA[<p>CentOS 7 安装 mongodb</p><a id="more"></a><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 创建 repo文件</span></span><br><span class="line">touch /etc/yum.repos.d/mongodb-org-4.0.repo</span><br><span class="line"><span class="comment"># 配置 repo文件(复制以下内容到.repo文件)</span></span><br><span class="line">[mongodb-org-4.0]</span><br><span class="line">name=MongoDB Repository</span><br><span class="line">baseurl=https://repo.mongodb.org/yum/redhat/<span class="variable">$releasever</span>/mongodb- org/4.0/x86_64/</span><br><span class="line">gpgcheck=1</span><br><span class="line">enabled=1</span><br><span class="line"></span><br><span class="line">gpgkey=https://www.mongodb.org/static/pgp/server-4.0.asc</span><br><span class="line"><span class="comment"># 安装</span></span><br><span class="line">sudo yum install -y mongodb-org</span><br><span class="line"><span class="comment"># 编辑配置文件: 修改绑定地址为0.0.0.0</span></span><br><span class="line">vim /etc/mongod.conf</span><br><span class="line"><span class="comment"># 启动、停止、重启</span></span><br><span class="line">service mongod start/stop/restart</span><br></pre></td></tr></table></figure><h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 1.修改数据和日志的存储位置</span></span><br><span class="line"><span class="comment"># bin目录下增加mongodb.conf文件</span></span><br><span class="line"><span class="comment"># 内容：</span></span><br><span class="line">port=27017</span><br><span class="line">dbpath=/usr/<span class="built_in">local</span>/mongodb/data/</span><br><span class="line">logpath=/usr/<span class="built_in">local</span>/mongodb/<span class="built_in">log</span>/mongodb.log</span><br><span class="line">fork = <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 释义：</span></span><br><span class="line"><span class="comment"># port: 数据库服务使用端口</span></span><br><span class="line"><span class="comment"># dbpath: 数据存放的文件位置</span></span><br><span class="line"><span class="comment"># logpath: 日志文件的存放位置</span></span><br><span class="line"><span class="comment"># fork: 后台守护进程运行</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 启动命令：</span></span><br><span class="line">./mongod -f mongodb.conf</span><br><span class="line"></span><br><span class="line"><span class="comment"># 关闭方式：</span></span><br><span class="line">./mongo</span><br><span class="line"><span class="comment"># &gt;</span></span><br><span class="line"><span class="comment"># &gt;use admin</span></span><br><span class="line"><span class="comment"># &gt;db.shutdownServer()</span></span><br></pre></td></tr></table></figure><h2 id="卸载"><a href="#卸载" class="headerlink" title="卸载"></a>卸载</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 卸载</span></span><br><span class="line">yum erase $(rpm -qa | grep mongodb-org)</span><br><span class="line">rm -r /var/<span class="built_in">log</span>/mongodb</span><br><span class="line">rm -r /var/lib/mongo</span><br></pre></td></tr></table></figure><p><br><br><span class="btn large center"><a href="<https://github.com/wongqingbin/blog/issues>" title="向博主反馈问题"><i class="fas fa-paper-plane"></i>向博主反馈问题</a></span></p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mongodb </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CentOS 7 安装 kafka</title>
      <link href="/ckpo6h1v50017fmnibizs27az/"/>
      <url>/ckpo6h1v50017fmnibizs27az/</url>
      
        <content type="html"><![CDATA[<p>CentOS 7 安装 kafka，简单配置使用kafka</p><a id="more"></a><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 下载安装包</span></span><br><span class="line">wget http://mirror.bit.edu.cn/apache/kafka/2.2.0/kafka_2.12-2.2.0.tgz</span><br><span class="line"><span class="comment"># 解压安装包</span></span><br><span class="line">tar -xzf kafka_2.12-2.2.0.tgz</span><br></pre></td></tr></table></figure><h2 id="启动"><a href="#启动" class="headerlink" title="启动"></a>启动</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 启动zookeeper</span></span><br><span class="line">bin/zookeeper-server-start.sh config/zookeeper.properties</span><br><span class="line"><span class="comment"># 启动kafka</span></span><br><span class="line">bin/kafka-server-start.sh config/server.properties</span><br></pre></td></tr></table></figure><h2 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 创建topic</span></span><br><span class="line">bin/kafka-topics.sh --create --bootstrap-server localhost:9092 -- replication-factor 1 --partitions 1 --topic <span class="built_in">test</span></span><br><span class="line"><span class="comment"># 列出topic</span></span><br><span class="line">bin/kafka-topics.sh --list --bootstrap-server localhost:9092</span><br><span class="line"><span class="comment"># 发送消息</span></span><br><span class="line">bin/kafka-console-producer.sh --broker-list localhost:9092 --topic <span class="built_in">test</span></span><br><span class="line"><span class="comment"># 接收消息</span></span><br><span class="line">bin/kafka-console-consumer.sh --bootstrap-server localhost:9092 -- topic <span class="built_in">test</span> --from-beginning</span><br></pre></td></tr></table></figure><h2 id="启动zookeeper"><a href="#启动zookeeper" class="headerlink" title="启动zookeeper"></a>启动zookeeper</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 1</span></span><br><span class="line">bin/zookeeper-server-start.sh config/zookeeper.properties</span><br><span class="line"><span class="comment"># 2 守护进程启动方式 防止挂掉</span></span><br><span class="line">bin/zookeeper-server-start.sh -daemon config/zookeeper.properties</span><br></pre></td></tr></table></figure><h2 id="启动kafka"><a href="#启动kafka" class="headerlink" title="启动kafka"></a>启动kafka</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 1</span></span><br><span class="line">bin/kafka-server-start.sh config/server.properties</span><br><span class="line"><span class="comment"># 2 守护进程启动方式 防止挂掉</span></span><br><span class="line">bin/kafka-server-start.sh -daemon config/server.properties</span><br></pre></td></tr></table></figure><h2 id="查看topic列表"><a href="#查看topic列表" class="headerlink" title="查看topic列表"></a>查看topic列表</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bin/kafka-topics.sh --list --zookeeper localhost:2181</span><br></pre></td></tr></table></figure><h2 id="创建topic"><a href="#创建topic" class="headerlink" title="创建topic"></a>创建topic</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bin/kafka-topics.sh --create --zookeeper localhost:2181 --replication-factor 1 --partitions 1 --topic <span class="built_in">test</span></span><br></pre></td></tr></table></figure><h2 id="生产者"><a href="#生产者" class="headerlink" title="生产者"></a>生产者</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bin/kafka-console-producer.sh --broker-list localhost:9092 --topic <span class="built_in">test</span></span><br></pre></td></tr></table></figure><h2 id="消费者"><a href="#消费者" class="headerlink" title="消费者"></a>消费者</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bin/kafka-console-consumer.sh --bootstrap-server localhost:9092 --topic <span class="built_in">test</span> --from-beginning</span><br></pre></td></tr></table></figure><h2 id="关闭kafka"><a href="#关闭kafka" class="headerlink" title="关闭kafka"></a>关闭kafka</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bin/kafka-server-stop.sh</span><br></pre></td></tr></table></figure><h2 id="关闭zookeeper"><a href="#关闭zookeeper" class="headerlink" title="关闭zookeeper"></a>关闭zookeeper</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bin/zookeeper-server-stop.sh</span><br></pre></td></tr></table></figure><p><br><br><span class="btn large center"><a href="<https://github.com/wongqingbin/blog/issues>" title="向博主反馈问题"><i class="fas fa-paper-plane"></i>向博主反馈问题</a></span></p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> kafka </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CentOS 7  c 编译依赖安装</title>
      <link href="/ckpo6h1ut000pfmnidr6z9xgf/"/>
      <url>/ckpo6h1ut000pfmnidr6z9xgf/</url>
      
        <content type="html"><![CDATA[<p>Linux使用源码安装软件时，需要c编译时，首先安装c编译依赖</p><a id="more"></a><h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">yum install gcc</span><br><span class="line">yum install pcre-devel</span><br><span class="line">yum install zlib zlib-devel</span><br><span class="line">yum install openssl openssl-devel</span><br><span class="line"></span><br><span class="line">yum install gcc-c++ pcre pcre-devel zlib zlib-devel openssl openssl-devel</span><br></pre></td></tr></table></figure><p><br><br><span class="btn large center"><a href="<https://github.com/wongqingbin/blog/issues>" title="向博主反馈问题"><i class="fas fa-paper-plane"></i>向博主反馈问题</a></span></p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> gcc </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CentOS 7 安装 python</title>
      <link href="/ckpo6h1ve001nfmni1tfgh4ox/"/>
      <url>/ckpo6h1ve001nfmni1tfgh4ox/</url>
      
        <content type="html"><![CDATA[<p>CentOS 7 yum安装 python3.6</p><a id="more"></a><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 安装依赖包</span></span><br><span class="line">yum install -y openssl-devel bzip2-devel expat-devel gdbm-devel readline-devel sqlite-devel</span><br><span class="line"><span class="comment"># 下载安装包</span></span><br><span class="line">wget https://www.python.org/ftp/python/3.6.5/Python-3.6.5.tgz</span><br><span class="line"><span class="comment"># 解压安装包</span></span><br><span class="line">tar -xzvf Python-3.6.5.tgz</span><br><span class="line"><span class="comment"># 进入安装目录</span></span><br><span class="line"><span class="built_in">cd</span> Python-3.6.5</span><br><span class="line"><span class="comment"># 新建/usr/local/python3</span></span><br><span class="line">mkdir /usr/<span class="built_in">local</span>/python3</span><br><span class="line"><span class="comment"># 编译预处理</span></span><br><span class="line">./configure --prefix=/usr/<span class="built_in">local</span>/python3</span><br><span class="line"><span class="comment"># 编译并安装</span></span><br><span class="line">make &amp;&amp; make install</span><br></pre></td></tr></table></figure><h2 id="修改Linux的Python版本默认为Python3"><a href="#修改Linux的Python版本默认为Python3" class="headerlink" title="修改Linux的Python版本默认为Python3"></a>修改Linux的Python版本默认为Python3</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Linux默认Python为2.7</span></span><br><span class="line"><span class="comment"># 建立新安装的python3.6.5的软连接</span></span><br><span class="line">ln -s /usr/python/bin/python3 /usr/bin/python3</span><br><span class="line">ln -s /usr/python/bin/pip3 /usr/bin/pip3</span><br></pre></td></tr></table></figure><h2 id="python3添加环境变量"><a href="#python3添加环境变量" class="headerlink" title="python3添加环境变量"></a>python3添加环境变量</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">vim ~/.bash_profile</span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># PATH=$PATH:$HOME/bin:/opt/python3.6.5/bin  # opt需修改为自己安装的Python所在目录</span></span><br><span class="line"><span class="comment"># export PATH</span></span><br><span class="line"><span class="built_in">source</span> ~/.bash_profile</span><br></pre></td></tr></table></figure><h2 id="验证"><a href="#验证" class="headerlink" title="验证"></a>验证</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">python3 --version</span><br><span class="line"></span><br><span class="line">python --version</span><br></pre></td></tr></table></figure><p><br><br><span class="btn large center"><a href="<https://github.com/wongqingbin/blog/issues>" title="向博主反馈问题"><i class="fas fa-paper-plane"></i>向博主反馈问题</a></span></p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CentOS 7 安装 JDK</title>
      <link href="/ckpo6h1v40014fmnibj7derln/"/>
      <url>/ckpo6h1v40014fmnibj7derln/</url>
      
        <content type="html"><![CDATA[<p>CentOS 7 安装 JDK1.8 并配置环境变量</p><a id="more"></a><h2 id="yum安装jdk"><a href="#yum安装jdk" class="headerlink" title="yum安装jdk"></a>yum安装jdk</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install java-1.8.0-openjdk*</span><br></pre></td></tr></table></figure><h2 id="配置环境变量"><a href="#配置环境变量" class="headerlink" title="配置环境变量"></a>配置环境变量</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">vim ~/.bash_profile</span><br><span class="line"></span><br><span class="line"><span class="comment"># set java environment</span></span><br><span class="line"><span class="comment"># JAVA_HOME=/usr/lib/jvm/java-1.8.0-openjdk-1.8.0.181-3.b13.el7_5.x86_64</span></span><br><span class="line"><span class="comment"># PATH=$PATH:$JAVA_HOME/bin</span></span><br><span class="line"><span class="comment"># CLASSPATH=.:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar</span></span><br><span class="line"><span class="comment"># export JAVA_HOME  CLASSPATH  PATH</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">source</span> ~/.bash_profile</span><br></pre></td></tr></table></figure><h2 id="验证"><a href="#验证" class="headerlink" title="验证"></a>验证</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java --version</span><br></pre></td></tr></table></figure><p><br><br><span class="btn large center"><a href="<https://github.com/wongqingbin/blog/issues>" title="向博主反馈问题"><i class="fas fa-paper-plane"></i>向博主反馈问题</a></span></p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> jdk </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>curl发送HTTP请求</title>
      <link href="/ckpo6h1uz000wfmnidsc62hwf/"/>
      <url>/ckpo6h1uz000wfmnidsc62hwf/</url>
      
        <content type="html"><![CDATA[<p>使用curl发送HTTP请求，用于简单验证接口连接性。</p><a id="more"></a><h2 id="GET-请求示例"><a href="#GET-请求示例" class="headerlink" title="GET 请求示例"></a>GET 请求示例</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># GET请求 -i</span></span><br><span class="line">curl -i &lt;url&gt;</span><br><span class="line"><span class="comment"># 返回示例：</span></span><br><span class="line"><span class="comment"># HTTP/1.0 200 OK</span></span><br><span class="line"><span class="comment"># Content-Type: application/json</span></span><br><span class="line"><span class="comment"># Content-Length: 151</span></span><br><span class="line"><span class="comment"># Server: Werkzeug/0.8.3 Python/2.7.3</span></span><br><span class="line"><span class="comment"># Date: Mon, 20 May 2013 05:21:50 GMT</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># &#123;</span></span><br><span class="line"><span class="comment">#   "data": &#123;</span></span><br><span class="line"><span class="comment">#     "description": "Need to find a good Python tutorial on the web",</span></span><br><span class="line"><span class="comment">#   &#125;,</span></span><br><span class="line"><span class="comment">#   "code": 200</span></span><br><span class="line"><span class="comment"># &#125;</span></span><br></pre></td></tr></table></figure><h2 id="POST-请求示例"><a href="#POST-请求示例" class="headerlink" title="POST 请求示例"></a>POST 请求示例</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># POST请求示例 -i</span></span><br><span class="line">curl -i -H <span class="string">"Content-Type: application/json"</span> -X POST -d <span class="string">'&#123;"data":"data"&#125;'</span> &lt;url&gt;</span><br><span class="line"><span class="comment"># HTTP/1.0 201 Created</span></span><br><span class="line"><span class="comment"># Content-Type: application/json</span></span><br><span class="line"><span class="comment"># Content-Length: 104</span></span><br><span class="line"><span class="comment"># Server: Werkzeug/0.8.3 Python/2.7.3</span></span><br><span class="line"><span class="comment"># Date: Mon, 20 May 2013 05:56:21 GMT</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># &#123;</span></span><br><span class="line"><span class="comment">#   "data": &#123;</span></span><br><span class="line"><span class="comment">#     "description": "Need to find a good Python tutorial on the web",</span></span><br><span class="line"><span class="comment">#   &#125;,</span></span><br><span class="line"><span class="comment">#   "code": 200</span></span><br><span class="line"><span class="comment"># &#125;</span></span><br></pre></td></tr></table></figure><h2 id="curl-带密码请求"><a href="#curl-带密码请求" class="headerlink" title="curl 带密码请求"></a>curl 带密码请求</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -u username:password -i url</span></span><br><span class="line">curl -u miguel:python -i &lt;url&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment"># HTTP/1.0 200 OK</span></span><br><span class="line"><span class="comment"># Content-Type: application/json</span></span><br><span class="line"><span class="comment"># Content-Length: 316</span></span><br><span class="line"><span class="comment"># Server: Werkzeug/0.8.3 Python/2.7.3</span></span><br><span class="line"><span class="comment"># Date: Mon, 20 May 2013 06:46:45 GMT</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># &#123;</span></span><br><span class="line"><span class="comment">#   "data": &#123;</span></span><br><span class="line"><span class="comment">#     "description": "Need to find a good Python tutorial on the web",</span></span><br><span class="line"><span class="comment">#   &#125;,</span></span><br><span class="line"><span class="comment">#   "code": 200</span></span><br><span class="line"><span class="comment"># &#125;</span></span><br></pre></td></tr></table></figure><p><br><br><span class="btn large center"><a href="<https://github.com/wongqingbin/blog/issues>" title="向博主反馈问题"><i class="fas fa-paper-plane"></i>向博主反馈问题</a></span></p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> curl </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ssh-keygen</title>
      <link href="/ckpo6h1vh001ufmni80secqil/"/>
      <url>/ckpo6h1vh001ufmni80secqil/</url>
      
        <content type="html"><![CDATA[<p>ssh-keygen简单用法<br>本文主要针对ssh-keygen配置GitHub Pages使用ssh免密部署<br>ssh秘钥登录特点：1.安全；2.免输密码。</p><a id="more"></a><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># ssh-keygen为ssh自带命令，Mac、Linux、Ubuntu等都自带</span></span><br></pre></td></tr></table></figure><h2 id="检查是否配置过ssh服务"><a href="#检查是否配置过ssh服务" class="headerlink" title="检查是否配置过ssh服务"></a>检查是否配置过ssh服务</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># mac、linux、ubuntu</span></span><br><span class="line"><span class="built_in">cd</span> ~/.ssh</span><br><span class="line">ls</span><br><span class="line"><span class="comment"># id_rsa  id_rsa.pub  known_hosts</span></span><br><span class="line"><span class="comment"># 如果有id_rsa  id_rsa.pub，证明以前曾经配置过，如果忘记曾经配置过，请删除此两项</span></span><br></pre></td></tr></table></figure><h2 id="配置ssh"><a href="#配置ssh" class="headerlink" title="配置ssh"></a>配置ssh</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -b 4096 -C <span class="string">"your_email@example.com"</span></span><br><span class="line"><span class="comment"># 后面全部enter，不选择任何选项，最后生成的秘钥为无密码密钥</span></span><br></pre></td></tr></table></figure><h2 id="查看公钥和私钥"><a href="#查看公钥和私钥" class="headerlink" title="查看公钥和私钥"></a>查看公钥和私钥</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看公钥</span></span><br><span class="line">cat ~/.ssh/id_rsa.pub</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看私钥</span></span><br><span class="line">cat ~/.ssh/id_rsa</span><br></pre></td></tr></table></figure><h2 id="服务器配置公钥"><a href="#服务器配置公钥" class="headerlink" title="服务器配置公钥"></a>服务器配置公钥</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 以github为例</span></span><br><span class="line"><span class="comment"># 配置路径：Setting -&gt; SSH and GPG keys -&gt; New SSH key or Add SSH key</span></span><br><span class="line"><span class="comment"># title可以随便起（尽量和自己的私钥所在电脑相关联）</span></span><br><span class="line"><span class="comment"># Key:    # 复制id_rsa.pub文件的全部内容</span></span><br><span class="line"><span class="comment"># 最后保存即可</span></span><br></pre></td></tr></table></figure><h2 id="测试是否连通"><a href="#测试是否连通" class="headerlink" title="测试是否连通"></a>测试是否连通</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 以github为例</span></span><br><span class="line">ssh -T git@github.com</span><br></pre></td></tr></table></figure><p><br><br><span class="btn large center"><a href="<https://github.com/wongqingbin/blog/issues>" title="向博主反馈问题"><i class="fas fa-paper-plane"></i>向博主反馈问题</a></span></p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ssh-keygen </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>scp</title>
      <link href="/ckpo6h1vf001qfmniewk85gso/"/>
      <url>/ckpo6h1vf001qfmniewk85gso/</url>
      
        <content type="html"><![CDATA[<p>Linux scp 命令用于 Linux 之间复制文件和目录。<br>scp 是 secure copy 的缩写, scp 是 linux 系统下基于 ssh 登陆进行安全的远程文件拷贝命令。<br>scp 是加密的，rcp 是不加密的，scp 是 rcp 的加强版。<br>scp [可选参数] file_source file_target</p><a id="more"></a><h2 id="从本地复制到远程Linux"><a href="#从本地复制到远程Linux" class="headerlink" title="从本地复制到远程Linux"></a>从本地复制到远程Linux</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 复制文件1 (自动重命名)</span></span><br><span class="line">scp local_file remote_username@remote_ip:remote_file</span><br><span class="line"><span class="comment"># 复制文件2 (无重命名)</span></span><br><span class="line">scp local_file remote_username@remote_ip:remote_folder</span><br><span class="line"><span class="comment"># PS: 需要输入远程ssh登录的密码；如果未指定用户名，则需要输入用户名和密码</span></span><br></pre></td></tr></table></figure><h2 id="从远程Linux复制到本地"><a href="#从远程Linux复制到本地" class="headerlink" title="从远程Linux复制到本地"></a>从远程Linux复制到本地</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 复制文件1 (自动重命名)</span></span><br><span class="line">scp remote_username@remote_ip:remote_file local_file</span><br><span class="line"><span class="comment"># 复制文件2 (无重命名)</span></span><br><span class="line">scp remote_username@remote_ip:remote_folder local_folder</span><br><span class="line"><span class="comment"># PS: 需要输入远程ssh登录的密码；如果未指定用户名，则需要输入用户名和密码</span></span><br></pre></td></tr></table></figure><h2 id="复制文件夹"><a href="#复制文件夹" class="headerlink" title="复制文件夹"></a>复制文件夹</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># scp命令后加 -r 参数即可</span></span><br><span class="line">scp -r</span><br><span class="line"></span><br><span class="line">scp [可选参数] file_source file_target</span><br><span class="line"><span class="comment"># 参数说明：</span></span><br><span class="line"><span class="comment"># -1： 强制scp命令使用协议ssh1</span></span><br><span class="line"><span class="comment"># -2： 强制scp命令使用协议ssh2</span></span><br><span class="line"><span class="comment"># -4： 强制scp命令只使用IPv4寻址</span></span><br><span class="line"><span class="comment"># -6： 强制scp命令只使用IPv6寻址</span></span><br><span class="line"><span class="comment"># -B： 使用批处理模式（传输过程中不询问传输口令或短语）</span></span><br><span class="line"><span class="comment"># -C： 允许压缩。（将-C标志传递给ssh，从而打开压缩功能）</span></span><br><span class="line"><span class="comment"># -p：保留原文件的修改时间，访问时间和访问权限。</span></span><br><span class="line"><span class="comment"># -q： 不显示传输进度条。</span></span><br><span class="line"><span class="comment"># -r： 递归复制整个目录。</span></span><br><span class="line"><span class="comment"># -v：详细方式显示输出。scp和ssh(1)会显示出整个过程的调试信息。这些信息用于调试连接，验证和配置问题。</span></span><br><span class="line"><span class="comment"># -c cipher： 以cipher将数据传输进行加密，这个选项将直接传递给ssh。</span></span><br><span class="line"><span class="comment"># -F ssh_config： 指定一个替代的ssh配置文件，此参数直接传递给ssh。</span></span><br><span class="line"><span class="comment"># -i identity_file： 从指定文件中读取传输时使用的密钥文件，此参数直接传递给ssh。</span></span><br><span class="line"><span class="comment"># -l limit： 限定用户所能使用的带宽，以Kbit/s为单位。</span></span><br><span class="line"><span class="comment"># -o ssh_option： 如果习惯于使用ssh_config(5)中的参数传递方式，</span></span><br><span class="line"><span class="comment"># -P port：注意是大写的P, port是指定数据传输用到的端口号</span></span><br><span class="line"><span class="comment"># -S program： 指定加密传输时所使用的程序。此程序必须能够理解ssh(1)的选项。</span></span><br></pre></td></tr></table></figure><p><br><br><span class="btn large center"><a href="<https://github.com/wongqingbin/blog/issues>" title="向博主反馈问题"><i class="fas fa-paper-plane"></i>向博主反馈问题</a></span></p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> scp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>terminal</title>
      <link href="/ckpo6h1vv002vfmni2n9mhzoe/"/>
      <url>/ckpo6h1vv002vfmni2n9mhzoe/</url>
      
        <content type="html"><![CDATA[<p>Mac终端terminal自动补全之忽略大小写</p><a id="more"></a><h2 id="自动补全忽略大小写（terminal）"><a href="#自动补全忽略大小写（terminal）" class="headerlink" title="自动补全忽略大小写（terminal）"></a>自动补全忽略大小写（terminal）</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 终端中输入以下命令：</span></span><br><span class="line">$ nano .inputrc</span><br><span class="line"><span class="comment"># 在里面粘贴一下语句后, Control+O 保存</span></span><br><span class="line"><span class="built_in">set</span> completion-ignore-case on</span><br><span class="line"><span class="built_in">set</span> show-all-if-ambiguous on</span><br><span class="line">TAB: menu-complete</span><br><span class="line"></span><br><span class="line"><span class="comment"># PS: 需重启终端生效</span></span><br></pre></td></tr></table></figure><p><br><br><span class="btn large center"><a href="<https://github.com/wongqingbin/blog/issues>" title="向博主反馈问题"><i class="fas fa-paper-plane"></i>向博主反馈问题</a></span></p>]]></content>
      
      
      <categories>
          
          <category> Mac </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mac </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ipv6</title>
      <link href="/ckpo6h1vu002rfmnibidmdvi7/"/>
      <url>/ckpo6h1vu002rfmnibidmdvi7/</url>
      
        <content type="html"><![CDATA[<p>Mac系统关闭ipv6</p><a id="more"></a><h2 id="Mac修改网络时遇到无法修改，需先关闭ipv6"><a href="#Mac修改网络时遇到无法修改，需先关闭ipv6" class="headerlink" title="Mac修改网络时遇到无法修改，需先关闭ipv6"></a>Mac修改网络时遇到无法修改，需先关闭ipv6</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># command</span></span><br><span class="line">networksetup -listallnetworkservices | sed 1d | xargs -I &#123;&#125; networksetup -setv6off &#123;&#125;</span><br></pre></td></tr></table></figure><p><br><br><span class="btn large center"><a href="<https://github.com/wongqingbin/blog/issues>" title="向博主反馈问题"><i class="fas fa-paper-plane"></i>向博主反馈问题</a></span></p>]]></content>
      
      
      <categories>
          
          <category> Mac </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mac </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Homebrew</title>
      <link href="/ckpo6h1vs002lfmni613a6j85/"/>
      <url>/ckpo6h1vs002lfmni613a6j85/</url>
      
        <content type="html"><![CDATA[<p>mac提供包管理器的安装和使用(类似Ubuntu的apt，Linux的yum、pkg)</p><a id="more"></a><h2 id="Homebrew安装"><a href="#Homebrew安装" class="headerlink" title="Homebrew安装"></a>Homebrew安装</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/usr/bin/ruby -e <span class="string">"<span class="variable">$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)</span>"</span></span><br></pre></td></tr></table></figure><h2 id="简单使用"><a href="#简单使用" class="headerlink" title="简单使用"></a>简单使用</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">brew list package</span><br><span class="line">brew install &lt;package_name&gt;</span><br><span class="line">brew uninstall &lt;package_name&gt;</span><br></pre></td></tr></table></figure><h2 id="其他软件"><a href="#其他软件" class="headerlink" title="其他软件"></a>其他软件</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 安装Cakebrew和LaunchRocket</span></span><br><span class="line">brew cask install cakebrew</span><br><span class="line">brew cask install launchrocket</span><br><span class="line"><span class="comment"># PS：注意 launchrocket 只能管理Homebrew安装的服务，不支持源码下载安装的服务</span></span><br></pre></td></tr></table></figure><p><br><br><span class="btn large center"><a href="<https://github.com/wongqingbin/blog/issues>" title="向博主反馈问题"><i class="fas fa-paper-plane"></i>向博主反馈问题</a></span></p>]]></content>
      
      
      <categories>
          
          <category> Mac </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mac </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Finder</title>
      <link href="/ckpo6h1vq002hfmni5rvsezdl/"/>
      <url>/ckpo6h1vq002hfmni5rvsezdl/</url>
      
        <content type="html"><![CDATA[<p>Finder 显示与隐藏 隐藏文件(.文件)</p><a id="more"></a><h2 id="命令行永久改变显示方式"><a href="#命令行永久改变显示方式" class="headerlink" title="命令行永久改变显示方式"></a>命令行永久改变显示方式</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 显示</span></span><br><span class="line">defaults write com.apple.finder AppleShowAllFiles -bool <span class="literal">true</span>; killall Finder</span><br><span class="line"><span class="comment"># 隐藏</span></span><br><span class="line">defaults write com.apple.finder AppleShowAllFiles -bool <span class="literal">false</span>; killall Finder</span><br><span class="line"><span class="comment"># PS: 输入完命令回车后，需重启Finder：左上角的苹果标志--&gt;强制退出--&gt;Finder--&gt;重新启动</span></span><br></pre></td></tr></table></figure><h2 id="临时显示-隐藏快捷键"><a href="#临时显示-隐藏快捷键" class="headerlink" title="临时显示/隐藏快捷键"></a>临时显示/隐藏快捷键</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">command</span> + <span class="built_in">shift</span> + .</span><br></pre></td></tr></table></figure><p><br><br><span class="btn large center"><a href="<https://github.com/wongqingbin/blog/issues>" title="向博主反馈问题"><i class="fas fa-paper-plane"></i>向博主反馈问题</a></span></p>]]></content>
      
      
      <categories>
          
          <category> Mac </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mac </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Mac开启任何来源</title>
      <link href="/ckpo6h1vt002ofmni2o0h281u/"/>
      <url>/ckpo6h1vt002ofmni2o0h281u/</url>
      
        <content type="html"><![CDATA[<p>Mac在macOS系统下，系统偏好设置中的“安全与隐私”默认已经去除了允许“任何来源”App的选项，如果不开启会直接影响到无法运行一些第三方应用。</p><a id="more"></a><h2 id="开启权限命令"><a href="#开启权限命令" class="headerlink" title="开启权限命令"></a>开启权限命令</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 显示</span></span><br><span class="line">sudo spctl --status --master-disable</span><br><span class="line"><span class="comment"># 隐藏</span></span><br><span class="line">sudo spctl --status --master-enable</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/wongqingbin/Frieza/raw/master/image/spctl.png" alt="任何来源.png"></p><p><br><br><span class="btn large center"><a href="<https://github.com/wongqingbin/blog/issues>" title="向博主反馈问题"><i class="fas fa-paper-plane"></i>向博主反馈问题</a></span></p>]]></content>
      
      
      <categories>
          
          <category> Mac </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mac </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Bubble Sort</title>
      <link href="/ckpo6h1w3003efmnifipb89kp/"/>
      <url>/ckpo6h1w3003efmnifipb89kp/</url>
      
        <content type="html"><![CDATA[<p>经典面试题---进阶版冒泡排序</p><a id="more"></a><h2 id="常规版"><a href="#常规版" class="headerlink" title="常规版"></a>常规版</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python3</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">foo</span><span class="params">(data)</span>:</span></span><br><span class="line">    <span class="string">"""常规版"""</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(len(data)):</span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> range(len(data)-i<span class="number">-1</span>):</span><br><span class="line">            <span class="keyword">if</span> data[j] &gt; data[j+<span class="number">1</span>]:</span><br><span class="line">                data[j], data[j + <span class="number">1</span>] = data[j + <span class="number">1</span>], data[j]</span><br><span class="line">    <span class="keyword">return</span> data</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    data = [<span class="number">3</span>, <span class="number">0</span>, <span class="number">5</span>, <span class="number">4</span>, <span class="number">2</span>, <span class="number">6</span>, <span class="number">8</span>, <span class="number">1</span>, <span class="number">9</span>, <span class="number">7</span>]</span><br><span class="line">    print(data)</span><br><span class="line">    print(foo(data))</span><br></pre></td></tr></table></figure><h2 id="进阶版"><a href="#进阶版" class="headerlink" title="进阶版"></a>进阶版</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python3</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">bubble_sort</span><span class="params">(data)</span>:</span></span><br><span class="line">    <span class="string">"""</span></span><br><span class="line"><span class="string">    进阶版</span></span><br><span class="line"><span class="string">    最坏情况 时间复杂度 O(n**2)</span></span><br><span class="line"><span class="string">    最好情况 时间复杂度 O(n)</span></span><br><span class="line"><span class="string">    稳定排序法</span></span><br><span class="line"><span class="string">    空间复杂度最佳 只需要一个额外空间</span></span><br><span class="line"><span class="string">    适用于数据量小或有部分数据已经排过序的情况</span></span><br><span class="line"><span class="string">    :param data:</span></span><br><span class="line"><span class="string">    :return:</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    <span class="comment"># i 倒序循环列表排序</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(len(data)<span class="number">-1</span>, <span class="number">-1</span>, <span class="number">-1</span>):</span><br><span class="line">        flag = <span class="literal">False</span>  <span class="comment"># flag判断是否执行了交换操作</span></span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> range(i):  <span class="comment"># i 为倒序循环，所以j的最大值即是i 0～i</span></span><br><span class="line">            <span class="keyword">if</span> data[j] &gt; data[j + <span class="number">1</span>]:</span><br><span class="line">                data[j], data[j + <span class="number">1</span>] = data[j + <span class="number">1</span>], data[j]</span><br><span class="line">                flag = <span class="literal">True</span>  <span class="comment"># 执行过交换操作，把flag置为True</span></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> flag:  <span class="comment"># 执行完一次扫描后，判断是否执行过交换操作，如果没有交换过数据，就表示此时数组已完成排序，故直接跳出循环</span></span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        print(<span class="string">'第&#123;0&#125;次排序: &#123;1&#125;'</span>.format(len(data)-i, data))</span><br><span class="line">    <span class="keyword">return</span> data</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    data = [<span class="number">3</span>, <span class="number">0</span>, <span class="number">5</span>, <span class="number">4</span>, <span class="number">2</span>, <span class="number">6</span>, <span class="number">8</span>, <span class="number">1</span>, <span class="number">9</span>, <span class="number">7</span>]</span><br><span class="line">    print(data)</span><br><span class="line">    print(bubble_sort(data))</span><br></pre></td></tr></table></figure><p><br><br><span class="btn large center"><a href="<https://github.com/wongqingbin/blog/issues>" title="向博主反馈问题"><i class="fas fa-paper-plane"></i>向博主反馈问题</a></span></p>]]></content>
      
      
      <categories>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> interviewer </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>antdvp.vue-cli</title>
      <link href="/ckpo6h1w6003ofmnianpagq0m/"/>
      <url>/ckpo6h1w6003ofmnianpagq0m/</url>
      
        <content type="html"><![CDATA[<p>ant-design-vue-pro 使用脚手架 vue-cli 创建项目</p><a id="more"></a><h2 id="vue-create"><a href="#vue-create" class="headerlink" title="vue create "></a>vue create <my-project-name></my-project-name></h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#npm install -g @vue/cli  vue --version  @vue/cli 4.3.1</span></span><br><span class="line">vue create &lt;my-project-name&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment"># Vue CLI v4.3.1</span></span><br><span class="line"><span class="comment"># ? Please pick a preset: Manually select features</span></span><br><span class="line"><span class="comment"># ? Check the features needed for your project: Babel, Router, Vuex, CSS Pre-processors, Linter</span></span><br><span class="line"><span class="comment"># ? Use history mode for router? (Requires proper server setup for index fallback in production) Yes</span></span><br><span class="line"><span class="comment"># ? Pick a CSS pre-processor (PostCSS, Autoprefixer and CSS Modules are supported by default): Less</span></span><br><span class="line"><span class="comment"># ? Pick a linter / formatter config: Prettier</span></span><br><span class="line"><span class="comment"># ? Pick additional lint features: Lint on save</span></span><br><span class="line"><span class="comment"># ? Where do you prefer placing config for Babel, ESLint, etc.? In dedicated config files</span></span><br><span class="line"><span class="comment"># ? Save this as a preset for future projects? Yes</span></span><br><span class="line"><span class="comment"># ? Save preset as: a-d-v-p</span></span><br></pre></td></tr></table></figure><h2 id="Less、history"><a href="#Less、history" class="headerlink" title="Less、history"></a>Less、history</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Less: css加载器使用less，方便之后做主题颜色修改配置</span></span><br><span class="line"><span class="comment"># history: 最终路由中不带#号，漂亮的url路由</span></span><br><span class="line"><span class="comment"># In dedicated config files: 配置文件不堆积在package.json中；使用单独的配置文件vue.confi.js需手动新建</span></span><br></pre></td></tr></table></figure><h2 id="npm-run-serve"><a href="#npm-run-serve" class="headerlink" title="npm run serve"></a>npm run serve</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 验证第一步是否创建成功</span></span><br><span class="line"><span class="built_in">cd</span> &lt;my-project-name&gt;</span><br><span class="line">npm run serve</span><br><span class="line"></span><br><span class="line"><span class="comment"># 第二步 安装插件ant-design-vue 和 moment</span></span><br><span class="line">npm i ant-design-vue moment</span><br></pre></td></tr></table></figure><h2 id="vue-config-js"><a href="#vue-config-js" class="headerlink" title="vue.config.js"></a>vue.config.js</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># webpack配置之less-load引入</span></span><br><span class="line">mkdir vue.config.js</span><br><span class="line"><span class="comment"># 修改vue.config.js文件，添加css内容</span></span><br><span class="line">module.exports = &#123;</span><br><span class="line">  // less-load</span><br><span class="line">  css: &#123;</span><br><span class="line">    loaderOptions: &#123;</span><br><span class="line">      less: &#123;</span><br><span class="line">        // 这里的选项会传递给 less-loader</span><br><span class="line">        javascriptEnabled: <span class="literal">true</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 组件和样式按需加载，优化减小前端加载流量</span></span><br><span class="line"><span class="comment"># babel.config.js 文件配置</span></span><br><span class="line">module.exports = &#123;</span><br><span class="line">  presets: [<span class="string">"@vue/cli-plugin-babel/preset"</span>],</span><br><span class="line">  plugins: [</span><br><span class="line">    [</span><br><span class="line">      <span class="string">"import"</span>,</span><br><span class="line">      &#123; libraryName: <span class="string">"ant-design-vue"</span>, libraryDirectory: <span class="string">"es"</span>, style: <span class="literal">true</span> &#125;</span><br><span class="line">    ] // `style: <span class="literal">true</span>` 会加载 less 文件</span><br><span class="line">  ]</span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment"># 安装插件 babel-plugin-import</span></span><br><span class="line">npm i --save-dev babel-plugin-import</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/wongqingbin/Frieza/raw/master/image/advp.png" alt="advp.png"></p><p><br><br><span class="btn large center"><a href="<https://github.com/wongqingbin/blog/issues>" title="向博主反馈问题"><i class="fas fa-paper-plane"></i>向博主反馈问题</a></span></p>]]></content>
      
      
      <categories>
          
          <category> vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vue </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
